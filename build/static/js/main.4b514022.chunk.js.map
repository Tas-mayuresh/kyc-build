{"version":3,"sources":["components/api/ProjectCalls.js","pages/LoginContext.jsx","components/page-components/navgiationBar.jsx","components/page-components/footer.jsx","components/contracts/ContractData.js","components/images/user.png","components/images/merchant.png","pages/home.jsx","components/contracts/INRTTokenContractData.js","components/Encryption/file.js","pages/customer/login.jsx","components/page-components/selectDocumentModal.jsx","components/page-components/PdfViewer.jsx","components/page-components/confirmPasswordModal.jsx","components/api/AdharVerificationCalls.js","pages/customer/addnewrecord.jsx","pages/customer/home.jsx","pages/merchant/merchantlogin.jsx","pages/merchant/merchanthomepage.jsx","pages/admin/login.jsx","components/page-components/doctypeModel.jsx","pages/admin/home.jsx","App.js","reportWebVitals.js","index.js"],"names":["serverurl","createCustomer","email","password","walletAddress","axios","method","url","data","headers","response","createMerchant","userLogin","createDocument","formData","_accessToken","getMyDocumentsDocument","deactivateDocument","docId","getDocument","resultData","fetch","then","res","ok","arrayBuffer","status","toString","base64Str","Buffer","from","console","log","catch","err","Message","getUserDataByUserId","userId","getUserDocTypeList","username","getUserCount","roleType","type","getWebsiteData","updateWebsiteData","_noOfDocumentAllowed","_documentTypeList","LoginContext","createContext","LoginProvider","props","useState","isConnected","accessToken","web3","role","KYCContract","INRTContract","loginData","setLoginData","Provider","value","children","Menubar","useContext","history","useHistory","useLocation","useEffect","updateBalance","val","Navbar","collapseOnSelect","bg","variant","expand","Container","Brand","href","Toggle","Collapse","id","className","Nav","Link","onClick","tokenCount","NavDropdown","title","substr","slice","Item","push","Footer","Row","style","color","Col","Date","getFullYear","address","abi","Home","src","Merchants","Button","User","tokenAddress","tokenABI","CryptoJS","require","secretPassphrase","encrypt","message","AES","decrypt","encrypted","enc","Utf8","CustomerLogin","setUsername","pageType","setPageType","connect","window","Web3","currentProvider","eth","net","getId","netId","toast","error","getNetworkType","ethereum","request","accounts","code","length","Contract","localStorage","getItem","on","location","reload","setLoading","handleSubmit","event","preventDefault","user","target","setItem","rememberMe","checked","methods","customerLogin","call","result","success","text","indexOf","referral","send","txId","events","CustomerAdded","returnValues","Form","onSubmit","Group","controlId","Label","Control","placeholder","onChange","required","Check","label","disabled","loading","SelectDocumentModal","durationCount","setDurationCount","durationType","setDurationType","setUpUsingJSON","modalshow","undefined","accessrequestdata","documentsAllowed","jsonData","JSON","parse","documentsdata","forEach","element","index","documentType","document","getElementById","createAccessJSON","obj","_accessType","Object","keys","t","closeTime","parseInt","getTime","stringify","approverequest","onhide","Modal","show","onHide","Body","padding","border","fontSize","Table","striped","bordered","hover","map","key","isVerified","class","name","defaultChecked","md","defaultValue","pdfjs","GlobalWorkerOptions","workerSrc","version","PdfViewer","pdf","setShowDocumentURL","numPages","setNumPages","pageNumber","setPageNumber","file","onLoadSuccess","onContextMenu","e","ConfirmPasswordModal","saveallobjectdata","for","getAdharVerificationToken","access_token","generateAdharVerificationOTP","adharid","token","client_id","submitAdharVerificationOTP","otp","clientId","AddNewRecord","selectedDocumentTypeText","setSelectedDocumentTypeText","setFileDataBuffer","confirmPasswordmodalShow","setConfirmPasswordModalShow","adharVerification","setAdharVerification","authToken","setAuthToken","otpVerificationClient","setOTPVerificationClient","documentTypeList","setDocumentTypeList","getWebsiteVariables","myAllDocumentCount","documentsData","some","documentTypeText","adharFullName","nameOnDocument","verifiedData","_authToken","documentId","_otpVerificationClient","valid_aadhaar","otp_sent","full_name","aadhaar_number","gender","has_image","care_of","zip","documentFile","files","arr","filter","ele","setDocumentsData","saveAllObjectData","encryptedCid","user_id","updateCustomerData","deleteObject","setMyAllDocumentCount","wordBreak","fileUrl","Text","Select","evt","reader","FileReader","readAsArrayBuffer","addEventListener","accept","CustomerHome","showDocumentURL","selectedNavigation","setSelectedNavigation","allPendingRequestCount","setAllPendingRequestCount","allAccessAllowedCount","setAllAccessAllowedCount","allAccessRequestSelectedTab","setAllAccessRequestSelectedTab","allRequestData","setAllRequestData","accessRequestData","setAccessRequestData","allAccessHistoryData","setAllAccessHistoryData","modalShow","setModalShow","getAllRequests","getAccessHistory","getMyData","showDocument","encryptedUrl","getAllMyCustomersRequestsLength","allRequests","pendingRequestCount","accessAllowedCount","i","getAllMyCustomersRequestsData","MerchantName","getAllRequestsData","info","timestamp","openTime","getAllMyAccessHistoryLength","allAccessHistory","getMyAccessHistoryData","fromUsername","fromTimestamp","toTimestamp","approveRequest","documentList","encryptedDocumentList","merchantName","rejectRequest","closeRequest","closeAccess","getDocumentsAllowedString","s","str","CustomerLogo","size","Badge","width","height","Tabs","activeKey","onSelect","k","Tab","eventKey","toLocaleString","to","MerchantLogin","merchantLogin","MerchantAdded","MerchantHomePage","isDocumentDownloadable","setIsDocumentDownloadable","documentAccessData","setDocumentAccessData","myReferralTokenCount","setMyReferralTokenCount","userDocumentTypeList","setUserDocumentTypeList","allowedAccessUserList","setAllowedAccessUserList","getMyReferralRewardCount","merchantReferralRewardCount","claimReferralTokens","claimMerchantReferralReward","tx","balanceOf","setTokenCount","getAllMyMerchantsRequestsLength","allowedAccessUsers","getAllMyMerchantsRequestsData","CustomerName","Array","Set","getUserData","checkRequestStatus","RequestStatusChanged","getUserDocumentTypeList","allowance","approve","sendAccessRequest","MerchantLogo","marginTop","customerName","maxLength","backgroundColor","borderRadius","AdminLogin","owner","toLowerCase","DocTypeModal","editDocumentType","_data","allDocumentTypeList","json","setAllDocumentTypeList","updateWebsiteDataCall","AdminHome","totalCustomers","setTotalCustomers","totalMerchant","setTotalMerchant","setEditDocumentType","noOfDocumentAllowed","setNoOfDocumentAllowed","requestFees","setRequestFees","referralRewardValue","setReferralRewardValue","BDLTTokenAddress","setBDLTTokenAddress","getBDLTToken","getRequestFees","getReferralRewardValue","getUserCountData","resCustomer","_allDocumentTypeList","setNewBDLTToken","setBDLTToken","setNewRequestFees","fees","setNewReferralRewardValue","xs","splice","deleteDocTypeStr","App","autoClose","limit","Spinner","animation","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4b514022.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst serverurl = \"https://kyc-project-api.herokuapp.com/api\";\r\n\r\n//\"http://localhost:8080/api\";\r\n// role :-\r\n// admin->1\r\n// customer->2\r\n// merchant->3\r\n\r\nexport const createCustomer = async (email, password, walletAddress) => {\r\n    var response = await axios({\r\n        method: 'post',\r\n        url: serverurl + '/Users/create-user',\r\n        data: {\r\n            \"name\": email,\r\n            \"email\": email,\r\n            \"password\": password,\r\n            \"role\": \"2\",\r\n            \"walletAddress\": walletAddress\r\n        }, \r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n    });\r\n    return response.data;\r\n}\r\n\r\nexport const createMerchant = async (email, password, walletAddress) => {\r\n    var response = await axios({\r\n        method: 'post',\r\n        url: serverurl + '/Users/create-user',\r\n        data: {\r\n            \"name\": email,\r\n            \"email\": email,\r\n            \"password\": password,\r\n            \"role\": \"3\",\r\n            \"walletAddress\": walletAddress\r\n        }, \r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n    });\r\n    return response.data;\r\n}\r\n\r\nexport const userLogin = async (email, password) => {\r\n    var response = await axios({\r\n        method: 'post',\r\n        url: serverurl + '/Users/login-user',\r\n        data: {\r\n            \"email\": email,\r\n            \"password\": password\r\n        }, \r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n    });\r\n    return response.data;\r\n}\r\n\r\n//nameOnDocument:test1wwwww\r\n// documentId:adhar no\r\n// documentType:adhar1\r\n// status:active\r\nexport const createDocument = async (formData, _accessToken) => {\r\n    var response = await axios({\r\n        method: 'post',\r\n        url: serverurl + '/Documents/create-document?access_token=' + _accessToken,\r\n        data: formData, \r\n        headers: {\r\n            'content-type': 'multipart/form-data',\r\n            'Accept': 'application/json'\r\n        },\r\n    });\r\n    return response.data;\r\n}\r\n\r\nexport const getMyDocumentsDocument = async (_accessToken) => {\r\n    var response = await axios({\r\n        method: 'get',\r\n        url: serverurl + '/Documents/get-document-by-auth?access_token=' + _accessToken,\r\n    });\r\n    return response.data;\r\n}\r\n\r\nexport const deactivateDocument = async (docId, _accessToken) => {\r\n    var response = await axios({\r\n        method: 'put',\r\n        url: serverurl + '/Documents/document-active-deactive?access_token=' + _accessToken,\r\n        data: {\r\n            \"id\": docId,\r\n            \"status\": \"deactive\"\r\n        }, \r\n        headers: {\r\n            'Accept': 'application/json'\r\n        },\r\n    });\r\n    return response.data;\r\n}\r\n\r\nexport const getDocument = async (url) => {\r\n    let resultData=\"data:application/pdf;base64,\";\r\n    var response = await fetch('http://' + url,{headers: {'Accept': \"application/text\"},})\r\n        .then((res) => {\r\n            if (!res.ok) {\r\n                return res.status.toString()\r\n            }\r\n            return res.arrayBuffer()\r\n        })\r\n        .then((data) => {\r\n            var base64Str = Buffer.from(data).toString('base64');\r\n            // console.log(Buffer.base64Decode(base64Str, 'application/pdf'));\r\n            console.log(base64Str);\r\n            resultData+=base64Str;\r\n        })\r\n        .catch(\r\n            (err) => {\r\n                return err.Message;\r\n            });\r\n    return resultData;\r\n}\r\n\r\n//get all list of user documents\r\nexport const getUserDataByUserId = async (userId) => {\r\n    var response = await axios({\r\n        method: 'get',\r\n        url: serverurl + '/Documents/get-UserData-by-user-id?user_id=' + userId,\r\n    });\r\n    // console.log(response);\r\n    return response.data;\r\n}\r\n\r\nexport const getUserDocTypeList = async (username) => {\r\n    var response = await axios({ \r\n        method: 'get',\r\n        url: serverurl + '/Documents/doctype-list-by-user?username=' + username,\r\n    });\r\n    return response.data;\r\n}\r\n\r\nexport const getUserCount = async (roleType) => {\r\n    let type=roleType==2?\"customer\":\"merchant\";\r\n    var response = await axios({\r\n        method: 'get',\r\n        url: serverurl + '/Users/user-count?role='+type,\r\n    });\r\n    return response.data;\r\n}\r\n\r\nexport const getWebsiteData = async () => {\r\n    var response = await axios({\r\n        method: 'get',\r\n        url: serverurl + '/Websites/get-website',\r\n    });\r\n    return response.data;\r\n}\r\n\r\nexport const updateWebsiteData = async ( _noOfDocumentAllowed, _documentTypeList, _accessToken) => {\r\n    var response = await axios({\r\n        method: 'put',\r\n        url: serverurl + '/Websites/update-website?access_token=' + _accessToken,\r\n        data: {\r\n            \"noOfDocumentAllowed\":_noOfDocumentAllowed,\r\n            \"documentTypeList\": _documentTypeList,\r\n            \"id\": \"633c108dc92054001626bd99\"\r\n        }, \r\n        headers: {\r\n            'Accept': 'application/json'\r\n        },\r\n    });\r\n    return response.data;\r\n}","import React, {useState, createContext} from 'react';\r\n\r\nexport const LoginContext = createContext();\r\n\r\nexport const LoginProvider= props =>{\r\n    //import hooks for object\r\n    const [loginData, setLoginData] =  useState({\r\n        walletAddress:\"\",\r\n        isConnected:false,\r\n        username:\"\",\r\n        accessToken:\"\",\r\n        web3:null,\r\n        role:null,\r\n        KYCContract:null,\r\n        INRTContract:null\r\n    })\r\n    \r\n\r\n    return(\r\n        <LoginContext.Provider value={[loginData,setLoginData]}>\r\n            {props.children}\r\n        </LoginContext.Provider>\r\n    )\r\n\r\n}","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Navbar, Nav, Container, Offcanvas, NavDropdown, Form, FormControl, Button, Image } from 'react-bootstrap';\r\n\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport { LoginContext } from \"../../pages/LoginContext\";\r\n\r\nconst Menubar = (props) => {\r\n\r\n    const [loginData, setLoginData] = useContext(LoginContext);\r\n\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n\r\n    useEffect(() => {\r\n        // console.log(location.pathname);\r\n        props.updateBalance();\r\n    }, [loginData]);\r\n\r\n    const getWalletAdddressTrim = (val) => {\r\n        return val.substr(0, 5) + \"....\" + val.slice(-4);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Navbar collapseOnSelect bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n                <Container>\r\n                    <Navbar.Brand href=\"/\">\r\n                        KYC Authentication\r\n                    </Navbar.Brand>\r\n\r\n                    {loginData.username != \"\" ?\r\n                        <>\r\n                            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                            <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-end\">\r\n                                <Nav>\r\n                                    <Nav.Link onClick={() => props.updateBalance()}><span>INRT Tokens: </span>{props.tokenCount}\r\n                                    </Nav.Link>\r\n                                    <NavDropdown title={getWalletAdddressTrim(loginData.walletAddress)}>\r\n                                        <NavDropdown.Item href=\"#\" onClick={() => {\r\n                                                setLoginData({\r\n                                                    walletAddress: \"\",\r\n                                                    isConnected: false,\r\n                                                    username: \"\",\r\n                                                    web3: null,\r\n                                                    role: null,\r\n                                                    KYCContract: null,\r\n                                                    INRTContract: null\r\n                                                });\r\n                                                history.push('/');\r\n                                            }}>Logout\r\n                                        </NavDropdown.Item>\r\n                                    </NavDropdown>\r\n                                </Nav>\r\n                            </Navbar.Collapse>\r\n                        </>\r\n                        : <></>}\r\n                </Container>\r\n            </Navbar>\r\n        </>\r\n    )\r\n}\r\nexport default Menubar","import React from \"react\";\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <>\r\n            <Container>\r\n                <Row className=\"justify-content-md-center\" style={{ color: \"white\" }}>\r\n                    <Col>Copyright {new Date().getFullYear()}&copy; All Rights Reserved </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\nexport default Footer","//deployed Address\r\nexport const address = '0x93003d8286eEEB50AaDa400070aB93A0c5bD1Ed5';\r\n\r\n//ABI value\r\nexport const abi = [\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"constructor\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"previousAdmin\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"newAdmin\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"AdminChanged\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"beacon\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"BeaconUpgraded\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"username\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"password\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"userWalletAddress\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"CustomerAdded\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"username\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"documentPackageHash\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"password\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"userWalletAddress\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"Customerupdated\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint8\",\r\n\t\t\t\t\"name\": \"version\",\r\n\t\t\t\t\"type\": \"uint8\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"Initialized\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"username\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"password\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"userWalletAddress\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"MerchantAdded\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"previousOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"newOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"OwnershipTransferred\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"fromUsername\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"toUsername\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"timestamp\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_documentsAllowed\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"info\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"int8\",\r\n\t\t\t\t\"name\": \"status\",\r\n\t\t\t\t\"type\": \"int8\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"RequestAdded\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"fromUsername\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"toUsername\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"timestamp\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"documentsAllowed\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"info\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"int8\",\r\n\t\t\t\t\"name\": \"status\",\r\n\t\t\t\t\"type\": \"int8\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"RequestStatusChanged\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"implementation\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"Upgraded\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_fromMerchant\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_toUsername\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_documentsAllowed\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"_closeTime\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"approveRequest\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_fromMerchant\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_toUsername\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"status\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"approveRequestByOwner\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_fromMerchant\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_toUsername\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"checkRequestStatus\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_username\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"claimMerchantReferralReward\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_fromMerchant\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_toUsername\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"closeAccess\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_username\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_password\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_referralMerchant\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"createCustomer\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_username\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_password\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"createMerchant\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_username\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_password\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"customerLogin\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_fromMerchant\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_toUsername\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getAccessAllowedByAdmin\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_username\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getAllMyAccessHistoryLength\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_username\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"i\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getAllMyCustomersRequestsData\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_username\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getAllMyCustomersRequestsLength\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_fromMerchant\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"i\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getAllMyMerchantsRequestsData\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_fromMerchant\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getAllMyMerchantsRequestsLength\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_fromMerchant\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_toUsername\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getAllRequestsData\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"components\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\t\"name\": \"timestamp\",\r\n\t\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\t\t\"name\": \"documentsAllowed\",\r\n\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\t\t\"name\": \"info\",\r\n\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\t\"name\": \"openTime\",\r\n\t\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\t\"name\": \"closeTime\",\r\n\t\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"int8\",\r\n\t\t\t\t\t\t\"name\": \"status\",\r\n\t\t\t\t\t\t\"type\": \"int8\"\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\t\"internalType\": \"struct KYCContract.Request\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"tuple\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"getBDLTToken\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"contract IBDLT20\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_username\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"i\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getMyAccessHistoryData\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"components\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\t\t\"name\": \"fromUsername\",\r\n\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\t\"name\": \"fromTimestamp\",\r\n\t\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\t\"name\": \"toTimestamp\",\r\n\t\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\t\t\"name\": \"info\",\r\n\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\t\t\"name\": \"documentsAllowed\",\r\n\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\t\"internalType\": \"struct KYCContract.History\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"tuple\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_toUsername\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getMyData\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"getReferralRewardValue\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"getRequestFees\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_fromMerchant\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_toUsername\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getUserData\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"initialize\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_username\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_password\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"merchantLogin\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_username\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"merchantReferralRewardCount\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"owner\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"proxiableUUID\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes32\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_fromMerchant\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_toUsername\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"rejectRequest\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"renounceOwnership\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_fromMerchant\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_toUsername\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_documentsAllowed\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_info\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"sendAccessRequest\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"contract IBDLT20\",\r\n\t\t\t\t\"name\": \"token\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"setBDLTToken\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"_referralRewardValue\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"setReferralRewardValue\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"_fees\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"setRequestFees\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"newOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"transferOwnership\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_username\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_documentPackageHash\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_password\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"updateCustomerData\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"newImplementation\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"upgradeTo\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"newImplementation\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes\",\r\n\t\t\t\t\"name\": \"data\",\r\n\t\t\t\t\"type\": \"bytes\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"upgradeToAndCall\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"payable\",\r\n\t\t\"type\": \"function\"\r\n\t}\r\n];\r\n","export default __webpack_public_path__ + \"static/media/user.5b6d8fe4.png\";","export default __webpack_public_path__ + \"static/media/merchant.825aa4fb.png\";","import Web3 from 'web3';\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\nimport { Button, Form, Container, Row, Col } from \"react-bootstrap\";\r\nimport { toast } from 'react-toastify'; //toster\r\nimport { address, abi } from '../components/contracts/ContractData';\r\nimport User from \"../components/images/user.png\";\r\nimport Merchants from \"../components/images/merchant.png\";\r\nimport '../components/css/style.css';\r\n\r\n// Route to contribute page \r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Home(props) {\r\n\r\n  // jump to another page\r\n  const history = useHistory()\r\n\r\n\r\n  return (<>\r\n\r\n    <Container>\r\n\r\n\r\n      <div className=\"home-heading\">\r\n        <h2> Who are you? </h2>\r\n      </div>\r\n\r\n      <div className='user-row-ht'>\r\n        <div className=\"user-row\">\r\n          <div className='user-box'>\r\n            <img src={Merchants} />\r\n            <div className='btn-row'>\r\n              <Button onClick={() => history.push('/merchant/login')}> Merchants </Button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='user-box'>\r\n            <img src={User} />\r\n            <div className='btn-row'>\r\n              <Button onClick={() => history.push('/login')}> Users </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n\r\n    </Container>\r\n  </>\r\n  )\r\n}\r\nexport default Home\r\n\r\n\r\n","//deployed Address\r\nexport const tokenAddress = '0xB6cB7f498653D5F109800FCa71EbD3f365415291';\r\n\r\n//ABI value\r\nexport const tokenABI = [\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"constructor\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"spender\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"value\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"Approval\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"previousOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"newOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"OwnershipTransferred\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"Pause\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"from\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"value\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"Transfer\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"Unpause\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"_decimals\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint8\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint8\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"_name\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"_symbol\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"spender\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"allowance\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"spender\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"amount\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"approve\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"account\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"balanceOf\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"amount\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"burn\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"canPause\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"decimals\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint8\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint8\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"spender\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"subtractedValue\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"decreaseAllowance\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"getOwner\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"spender\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"addedValue\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"increaseAllowance\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"amount\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"mint\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"name\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"owner\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": false,\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"pause\",\r\n\t\t\"outputs\": [],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"paused\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": false,\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"renounceOwnership\",\r\n\t\t\"outputs\": [],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"symbol\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"totalSupply\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"recipient\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"amount\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"transfer\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"sender\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"recipient\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"amount\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"transferFrom\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"newOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"transferOwnership\",\r\n\t\t\"outputs\": [],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": false,\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"unpause\",\r\n\t\t\"outputs\": [],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t}\r\n];\r\n","var CryptoJS = require(\"crypto-js\");\r\n\r\nvar secretPassphrase=\"U2FsdGVkX18ZUVvShFSES21qHsQEqZXMxQ9zgHy+bu0=\";\r\n\r\nexport function encrypt(message){\r\n    var encrypted = CryptoJS.AES.encrypt(message, secretPassphrase).toString();\r\n    return encrypted;\r\n}\r\n\r\nexport function decrypt(encrypted){\r\n    var bytes = CryptoJS.AES.decrypt(encrypted, secretPassphrase);\r\n    var decrypted = bytes.toString(CryptoJS.enc.Utf8);\r\n    return decrypted;\r\n}\r\n\r\nexport function hash(string){\r\n    var hash = CryptoJS.SHA256(string);\r\n    return hash.toString(CryptoJS.enc.Base64);\r\n}\r\n","import Web3 from 'web3';\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\nimport { Button, Form, Container, Row, Col } from \"react-bootstrap\";\r\nimport { toast } from 'react-toastify'; //toster\r\nimport { address, abi } from '../../components/contracts/ContractData';\r\nimport { tokenAddress, tokenABI } from '../../components/contracts/INRTTokenContractData';\r\nimport { createCustomer, userLogin } from '../../components/api/ProjectCalls';\r\nimport { hash } from '../../components/Encryption/file';\r\n\r\n// Route to contribute page \r\nimport { useHistory } from \"react-router-dom\";\r\nimport { LoginContext } from '../LoginContext';\r\n\r\nfunction CustomerLogin(props) {\r\n  const [loginData, setLoginData] = useContext(LoginContext);\r\n  const [username, setUsername] = useState('');\r\n  const [pageType, setPageType] = useState(0); // 0 for login, 1 for sign up\r\n\r\n  // jump to another page\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n\r\n    if (localStorage.getItem('rememberMe')) {\r\n      const username = localStorage.getItem('username')\r\n      setUsername(username)\r\n    }\r\n    if (window.ethereum) {\r\n      window.ethereum.on('chainChanged', () => {\r\n        window.location.reload();\r\n      })\r\n      window.ethereum.on('accountsChanged', function (accounts) {\r\n        // Time to reload your interface with accounts[0]!\r\n        connect();\r\n      });\r\n      connect();\r\n    }\r\n    // fix-the-react-memory-leak-\r\n    return () => {\r\n      props.setLoading(false);\r\n    }\r\n  }, [])\r\n\r\n\r\n  async function connect() {\r\n    let web3;\r\n    let KYCContract, INRTContract;\r\n    //connect to web3\r\n    if (typeof window !== 'undefined' && typeof window.web3 !== 'undefined') {\r\n      //we are in the browser and metamask is running\r\n      //ETH test net 3,  // mainnet 1\r\n      // BSC test net 97  //mainnet 56\r\n      web3 = new Web3(window.web3.currentProvider);\r\n      let netId = await web3.eth.net.getId();\r\n      var networkName = \"\";\r\n      console.log(netId);\r\n      switch (netId) {\r\n        case 97:\r\n          networkName = 'BSC'\r\n          console.log('Network is BSC mainnet')\r\n          break\r\n        default:\r\n          toast.error('Please select mainnet first')\r\n          console.error('Please select mainnet first')\r\n          return;\r\n      }\r\n      //set details\r\n      //log network\r\n      web3.eth.net.getNetworkType().then(console.log);\r\n      let accounts;\r\n      try {\r\n        accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n      } catch (error) {\r\n        if (error.code === 4001) {\r\n          console.error(\"Please allow metamask to connect\")\r\n        }\r\n        return;\r\n        // console.log(error)\r\n      }\r\n      console.log(accounts)\r\n      if (accounts.length < 1) {\r\n        console.error('Please unlock metamask wallet first!')\r\n        return;\r\n      }\r\n      console.log(accounts[0]);\r\n\r\n      KYCContract = new web3.eth.Contract(abi, address);\r\n      INRTContract = new web3.eth.Contract(tokenABI, tokenAddress);\r\n      setLoginData({\r\n        walletAddress: accounts[0],\r\n        isConnected: true,\r\n        username: \"\",\r\n        web3: web3,\r\n        role: null,\r\n        KYCContract: KYCContract,\r\n        INRTContract: INRTContract\r\n      });\r\n\r\n    } else {\r\n      //on the browser or user is not running metamask\r\n      console.error(\"Metamask wallet not found! Please make sure wallet is installed and running!\");\r\n    }\r\n  }\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    props.setLoading(true);\r\n    const user = {\r\n      username: event.target.username.value,\r\n      password: event.target.password.value\r\n    }\r\n    localStorage.setItem('rememberMe', event.target.rememberMe.checked)\r\n    localStorage.setItem('username', username)\r\n\r\n    if (pageType == 0) { //Login\r\n      if (loginData.KYCContract == null) {\r\n        connect();\r\n        // toast.error(\"Please connect metamask first\");\r\n        // props.setLoading(false);\r\n        // return;\r\n      }\r\n      try {\r\n        var result = await loginData.KYCContract.methods.customerLogin(user.username, user.password).call({ from: loginData.walletAddress });\r\n        console.log(result);\r\n\r\n        if (result[0]) {\r\n          let res = await userLogin(user.username, user.password);\r\n          console.log(res);\r\n          if (res.success) {\r\n            setLoginData({ ...loginData, ...{ username: user.username, role: res.response.user.role, accessToken: res.response.accessToken } });\r\n            //navigate to admin page\r\n            history.push('/home');\r\n          } else\r\n            toast.error(\"Error while login call\");\r\n        }\r\n      } catch (err) {\r\n        var text = err.message.substr(err.message.indexOf('\"message\": \"') + 12);\r\n        var message = text.substr(0, text.indexOf('\"'));\r\n        toast.error(message);\r\n        console.log(err);\r\n      }\r\n    } else { //SignUP\r\n      user.referral = event.target.referral.value;\r\n      if (loginData.connect == false) {\r\n        toast.error(\"Please connect metamask first\");\r\n        return;\r\n      }\r\n      try {\r\n        var txId = await loginData.KYCContract.methods.createCustomer(user.username, user.password, user.referral).send({ from: loginData.walletAddress });\r\n        console.log(txId);\r\n        if (txId) {\r\n          try {\r\n            var result = txId.events.CustomerAdded.returnValues;\r\n            let res = await createCustomer(user.username, user.password, loginData.walletAddress);\r\n            console.log(res);\r\n            if (res.success) {\r\n              toast.success(\"Account created successfully!\");\r\n            } else\r\n              toast.error(\"Error while create account call\");\r\n          } catch (err) {\r\n            toast.error(err.message);\r\n            console.log(err.message);\r\n          }\r\n        } else {\r\n          toast.error(\"Error while creating account\");\r\n          console.error(\"Error while creating account\");\r\n        }\r\n      } catch (err) {\r\n        var text = err.message.substr(err.message.indexOf('\"message\": \"') + 12);\r\n        var message = text.substr(0, text.indexOf('\"'));\r\n        toast.error(message);\r\n        console.log(err.message);\r\n      }\r\n    }\r\n    props.setLoading(false);\r\n  }\r\n\r\n  const handleUsername = (event) => {\r\n    setUsername(event.target.value);\r\n  }\r\n\r\n  return (<>\r\n\r\n    <Container>\r\n      <div className='login-page'>\r\n        <div className=\"home-heading\">\r\n          <h2> {pageType == 0 ? \"Login\" : \"Sign Up\"}</h2>\r\n        </div>\r\n\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Group className=\"mb-3 input-form\" controlId=\"formUsername\">\r\n            <Form.Label>Username</Form.Label>\r\n            <Form.Control className=\"input-design\" type=\"username\" id=\"username\" placeholder=\"Enter Username\" value={username} onChange={handleUsername} required />\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3 input-form\" controlId=\"formPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control className=\"input-design\" type=\"password\" id=\"password\" placeholder=\"Password\" required />\r\n          </Form.Group>\r\n\r\n          {pageType == 1 ?\r\n            <Form.Group className=\"mb-3\" controlId=\"fromReferralMerchnat\">\r\n              <Form.Label>Referral</Form.Label>\r\n              <Form.Control className=\"input-design\" type=\"text\" id=\"referral\" placeholder=\"Enter Referral\" />\r\n            </Form.Group>\r\n            : <></>}\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formRememberMe\">\r\n            <Form.Check type=\"checkbox\" id=\"rememberMe\" label=\"Remember me \" />\r\n          </Form.Group>\r\n\r\n          <div className='btn-row'>\r\n            <Button variant=\"primary\" type=\"submit\" disabled={props.loading}>\r\n              {pageType == 0 ? \"Login\" : \"Sign Up\"}\r\n            </Button>\r\n          </div>\r\n\r\n          <div className='login-sp-text'>\r\n            {pageType == 0 ?\r\n              <p className=\"nt-member\">Not a member? <a href=\"#\" onClick={() => setPageType(1)}>Sign up now</a></p>\r\n              :\r\n              <p className=\"nt-member \">already a member? <a href=\"#\" onClick={() => setPageType(0)}>Login now</a></p>}\r\n          </div>\r\n\r\n        </Form>\r\n\r\n\r\n      </div>\r\n    </Container>\r\n  </>\r\n  )\r\n}\r\nexport default CustomerLogin\r\n\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Modal, Row, Col, Table } from \"react-bootstrap\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n\r\nfunction SelectDocumentModal(props) {\r\n\r\n  const [durationCount, setDurationCount] = useState(\"5\");\r\n  const [durationType, setDurationType] = useState(\"minutes\");\r\n\r\n  useEffect(() => {\r\n    setUpUsingJSON();\r\n  }, [props.modalshow]);\r\n\r\n  function isEmpty(obj) {\r\n    return Object.keys(obj).length === 0;\r\n  }\r\n\r\n  const setUpUsingJSON = () => {\r\n    if (props.accessrequestdata.documentsAllowed!=undefined) {\r\n      var jsonData = JSON.parse(props.accessrequestdata.documentsAllowed);\r\n      props.documentsdata.forEach(function (element, index) {\r\n        if (jsonData[element.documentType] != null) {\r\n          document.getElementById(\"select\" + index).checked = true;\r\n          if (jsonData[element.documentType] == \"View\") {\r\n            document.getElementById(\"view\" + index).checked = true;\r\n          } else if (jsonData[element.documentType] == \"Download\") {\r\n            document.getElementById(\"download\" + index).checked = true;\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  const createAccessJSON = () => {\r\n    var jsonData = {};\r\n    props.documentsdata.forEach(function (element, index) {\r\n      var isSelected = document.getElementById(\"select\" + index).checked;\r\n      if (isSelected) {\r\n        if (document.getElementById(\"view\" + index).checked) {\r\n          let _accessType = document.getElementById(\"view\" + index).value;\r\n          jsonData[element.documentType] = _accessType;\r\n        } else if (document.getElementById(\"download\" + index).checked) {\r\n          let _accessType = document.getElementById(\"download\" + index).value;\r\n          jsonData[element.documentType] = _accessType;\r\n        }\r\n      }\r\n    });\r\n    if (isEmpty(jsonData)) {\r\n      toast.error(\"Please select documents first\");\r\n    } else {\r\n      let t = 0;\r\n      if (durationType == \"minutes\") {\r\n        t = durationCount * 60;\r\n      } else if (durationType == \"hours\") {\r\n        t = durationCount * 3600;\r\n      } else if (durationType == \"days\") {\r\n        t = durationCount * 86400;\r\n      }\r\n      var closeTime = parseInt(new Date().getTime() / 1000) + t;\r\n      // console.log(closeTime);\r\n      // console.log(new Date(closeTime*1000).toLocaleString());\r\n      console.log(JSON.stringify(jsonData));\r\n      props.approverequest(props.accessrequestdata, JSON.stringify(jsonData), closeTime);\r\n      props.onhide();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal show={props.modalshow} onHide={props.onhide} className=\"popup-lg\">\r\n      <Modal.Body style={{ padding: '0px' }}>\r\n        <div className=\"popup-box\">\r\n          <div className=\"closed\">\r\n            <a style={{ border: 'none' }} onClick={props.onhide}><span style={{ fontSize: '25px' }}>×</span></a>\r\n          </div>\r\n\r\n          <div className=\"popup-data\">\r\n            <div className=\"popup-header\">\r\n              <h3>Select Documents</h3>\r\n            </div>\r\n            <div className=\"popup-body\">\r\n              <Row>\r\n                <p>Select documents to share with proper access type</p>\r\n                <Table striped bordered hover variant=\"light\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>#</th>\r\n                      <th>Document Type</th>\r\n                      <th>Select</th>\r\n                      <th>Access type</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {props.documentsdata.map((data, key) => {\r\n                      return (\r\n                        <tr key={key}>\r\n                          <td>{key + 1}</td>\r\n                          <td>{data?.documentType}{data?.isVerified == \"true\" ? <i class=\"fa fa-check-circle\" aria-hidden=\"true\" style={{ color: \"blue\" }}></i> : <></>}</td>\r\n                          <td className=\"text-align-center\">\r\n                            <input type=\"checkbox\" id={\"select\" + key} name=\"selected\" value=\"select\" />\r\n                          </td>\r\n                          <td>\r\n                            <label><input type=\"radio\" id={\"view\" + key} name={\"accessType\" + key} value=\"View\" defaultChecked />\r\n                              View</label> &ensp;\r\n                            <label><input type=\"radio\" id={\"download\" + key} name={\"accessType\" + key} value=\"Download\" />\r\n                              Download</label>\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                </Table>\r\n                <Row className=\"text-align-center select-duration\">\r\n                  <Col md={12}>\r\n                    <select name=\"durationCount\" id=\"durationCount\" defaultValue={durationCount}\r\n                      onChange={(event) => setDurationCount(event.target.value)}>\r\n                      {durationType == \"minutes\" ? <></> : <>\r\n                        <option value=\"1\">1</option>\r\n                        <option value=\"2\">2</option>\r\n                        <option value=\"3\">3</option>\r\n                        <option value=\"4\">4</option>\r\n                      </>}\r\n                      <option value=\"5\">5</option>\r\n                      <option value=\"6\">6</option>\r\n                      <option value=\"7\">7</option>\r\n                      <option value=\"8\">8</option>\r\n                      <option value=\"9\">9</option>\r\n                      <option value=\"10\">10</option>\r\n                      <option value=\"11\">11</option>\r\n                      <option value=\"12\">12</option>\r\n                      <option value=\"13\">13</option>\r\n                      <option value=\"14\">14</option>\r\n                      <option value=\"15\">15</option>\r\n                      <option value=\"16\">16</option>\r\n                      <option value=\"17\">17</option>\r\n                      <option value=\"18\">18</option>\r\n                      <option value=\"19\">19</option>\r\n                      <option value=\"20\">20</option>\r\n                      <option value=\"21\">21</option>\r\n                      <option value=\"22\">22</option>\r\n                      <option value=\"23\">23</option>\r\n                      <option value=\"24\">24</option>\r\n                      <option value=\"25\">25</option>\r\n                      <option value=\"26\">26</option>\r\n                      <option value=\"27\">27</option>\r\n                      <option value=\"28\">28</option>\r\n                      <option value=\"29\">29</option>\r\n                      <option value=\"30\">30</option>\r\n                    </select>\r\n\r\n                    <select name=\"durationType\" id=\"durationType\" defaultValue={durationType} onChange={(event) => setDurationType(event.target.value)}>\r\n                      <option value=\"minutes\">Minutes</option>\r\n                      <option value=\"hours\">Hours</option>\r\n                      <option value=\"days\">Days</option>\r\n                    </select>\r\n                  </Col>\r\n                </Row>\r\n                <Button onClick={() => createAccessJSON()}>Submit</Button>\r\n              </Row>\r\n            </div>\r\n            <div className=\"footer-popup\">\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default SelectDocumentModal","import React, { useState } from \"react\";\nimport { Document, Page, pdfjs } from \"react-pdf\";\nimport \"./PdfViewer.css\";\n\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nconst PdfViewer = ({ pdf,setShowDocumentURL }) => {\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n\n  const onDocumentLoadSuccess = ({ numPages }) => {\n    setNumPages(numPages);\n  };\n\n  const nextPage = () => {\n    if (pageNumber < numPages) {\n      setPageNumber(pageNumber + 1);\n    }\n  };\n\n  const prevPage = () => {\n    if (pageNumber > 1) {\n      setPageNumber(pageNumber - 1);\n    }\n  };\n\n  return (\n    <div className=\"pdf-view-box\">\n      <div className=\"controls\">\n        <button onClick={prevPage} disabled={pageNumber === 1}>\n        <i class=\"fa fa-chevron-left\" aria-hidden=\"true\"></i> \n        </button>\n        &emsp; {pageNumber}/{numPages} &emsp;\n        <button onClick={nextPage} disabled={pageNumber === numPages}>\n           <i class=\"fa fa-chevron-right\" aria-hidden=\"true\"></i>\n        </button>\n        <button className=\"float-right\" onClick={()=>setShowDocumentURL(\"\")}>X</button>\n      </div>\n\n      <Document\n        file={pdf}\n        onLoadSuccess={onDocumentLoadSuccess}\n        onContextMenu={(e) => e.preventDefault()}\n        className=\"pdf-container\"\n      >\n        <Page pageNumber={pageNumber} />\n      </Document>\n    </div>\n  );\n};\n\nexport default PdfViewer;\n","import React, { useState } from \"react\";\r\nimport { Button, Modal, Row, Table, Form } from \"react-bootstrap\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n\r\nfunction ConfirmPasswordModal(props) {\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const password = event.target.password.value;\r\n    props.saveallobjectdata(password);\r\n    props.onhide();\r\n  }\r\n\r\n  return (\r\n    <Modal show={props.modalshow} onHide={props.onhide} className=\"popup-lg\">\r\n      <Modal.Body style={{ padding: '0px' }}>\r\n        <div className=\"popup-box\">\r\n          <div className=\"closed\">\r\n            <a style={{ border: 'none' }} onClick={props.onhide}><span style={{ fontSize: '25px' }}>×</span></a>\r\n          </div>\r\n\r\n          <div className=\"popup-data\">\r\n            <div className=\"popup-header\">\r\n              <h3>Confirm</h3>\r\n            </div>\r\n            <div className=\"popup-body\">\r\n              <Row>\r\n                <Form onSubmit={handleSubmit}>\r\n                  <Form.Group className=\"mb-3\" controlId=\"password\">\r\n                    <Form.Label for=\"password\">Enter your account password to confirm.</Form.Label>\r\n                    <Form.Control className=\"input-design\" type=\"password\" id=\"password\" placeholder=\"Password\" required />\r\n                  </Form.Group>\r\n                  <Row>\r\n                  <Button variant=\"primary\" type=\"submit\" disabled={props.loading}>\r\n                    Confirm\r\n                  </Button>\r\n                  </Row>\r\n                </Form>\r\n              </Row>\r\n            </div>\r\n            <div className=\"footer-popup\">\r\n              <p>Note: Password should be correct or else your data will not be saved.</p>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default ConfirmPasswordModal","import axios from 'axios';\r\n\r\nexport const getAdharVerificationToken = async () => {\r\n    var response = await axios({\r\n        method: 'post',\r\n        url: 'https://kyc-api.surepass.io/api/v1/users/username-login',\r\n        data: {\r\n            \"username\": \"jewria\",\r\n            \"password\": \"Jewria@12\",\r\n            \"role\": [\"user\"]\r\n        }, \r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n    });\r\n    return response.data.data.access_token;\r\n}\r\n\r\nexport const generateAdharVerificationOTP = async (adharid, token) => {\r\n    var response = await axios({\r\n        method: 'post',\r\n        url: 'https://kyc-api.surepass.io/api/v1/aadhaar-v2/generate-otp',\r\n        data: {\r\n            \"id_number\": adharid\r\n        }, \r\n        headers: {\r\n            'Authorization': 'Bearer '+token,\r\n            'access-control-allow-origin': 'https://dash.surepass.io',\r\n            'access-control-allow-credentials': true,\r\n            'Content-Type': 'application/json'\r\n        },\r\n    });\r\n    return response.data.data.client_id;\r\n}\r\n\r\nexport const submitAdharVerificationOTP = async (otp, clientId, token) => {\r\n    var response = await axios({\r\n        method: 'post',\r\n        url: 'https://kyc-api.surepass.io/api/v1/aadhaar-v2/submit-otp',\r\n        data: {\r\n            \"otp\": otp,\r\n            \"client_id\": clientId\r\n        },\r\n        headers: {\r\n            'Authorization': 'Bearer '+token,\r\n            'Content-Type': 'application/json'\r\n        },\r\n    });\r\n    return response.data.data;\r\n}","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Row, Col, Container, Button, Table, Dropdown, DropdownButton, Form, Tooltip } from 'react-bootstrap';\r\nimport { toast } from \"react-toastify\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport { LoginContext } from \"../LoginContext\";\r\n\r\nimport ConfirmPasswordModal from \"../../components/page-components/confirmPasswordModal\";\r\nimport { getAdharVerificationToken, generateAdharVerificationOTP, submitAdharVerificationOTP } from '../../components/api/AdharVerificationCalls';\r\nimport { createDocument, getMyDocumentsDocument, deactivateDocument, getWebsiteData } from '../../components/api/ProjectCalls';\r\nimport { encrypt, decrypt } from '../../components/Encryption/file';\r\n\r\nconst AddNewRecord = (props) => {\r\n\r\n    const [selectedDocumentTypeText, setSelectedDocumentTypeText] = useState(false);\r\n    const [fileDataBuffer, setFileDataBuffer] = useState(null);\r\n    const [loginData, setLoginData] = useContext(LoginContext);\r\n    // Show no access model\r\n    const [confirmPasswordmodalShow, setConfirmPasswordModalShow] = useState(false);\r\n    // verification is completed for adhar\r\n    const [adharVerification, setAdharVerification] = useState(-1);//-1 not started, 0 for started, 1 for completed\r\n\r\n    const [authToken, setAuthToken] = useState(\"\");\r\n    const [otpVerificationClient, setOTPVerificationClient] = useState(\"\");\r\n    const [documentTypeList, setDocumentTypeList] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (adharVerification == -1) {\r\n            document.getElementById(\"nameOnDocument\").value = \"\";\r\n            document.getElementById(\"documentId\").value = \"\";\r\n            document.getElementById(\"documentFile\").value = \"\";\r\n        }\r\n        getWebsiteVariables();\r\n    }, [adharVerification]);\r\n\r\n\r\n    const getWebsiteVariables = async () => {\r\n        let res = await getWebsiteData();\r\n        setDocumentTypeList(res.data[0].documentTypeList);\r\n    }\r\n\r\n    //to update document type selected\r\n    //whether it adhar, pan, etc\r\n    const documentTypeUpadated = (e) => {\r\n        // console.log(e.target.value);\r\n        if (e.target.value == \"other\")\r\n            setSelectedDocumentTypeText(true);\r\n        else if (selectedDocumentTypeText)\r\n            setSelectedDocumentTypeText(false);\r\n    }\r\n\r\n    //convert image to base64 string\r\n    function handleFileSelect(evt) {\r\n        // console.log(evt);\r\n        if (evt.target.files[0]) {\r\n            evt.preventDefault();\r\n            // console.log(URL.createObjectURL(evt.target.files[0]));\r\n\r\n            const reader = new FileReader();\r\n            reader.readAsArrayBuffer(evt.target.files[0])\r\n            reader.addEventListener(\"load\", () => {\r\n                setFileDataBuffer(reader.result)\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        props.setLoading(true);\r\n        if (props.myAllDocumentCount > 1) {\r\n            props.setLoading(false);\r\n            toast.error(\"Only 2 documents are free to upload. Please purchase INRT tokens to add more documents.\");\r\n            return;\r\n        }\r\n        // console.log(event)\r\n        // check for document already exists\r\n        const alreadyExist = props.documentsData.some(element => {\r\n            if (element.documentType === (event.target.documentType.value == \"other\" ? event.target.documentTypeText.value : event.target.documentType.value)) {\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        if (alreadyExist) {\r\n            props.setLoading(false);\r\n            console.log(\"Please select unique document type\");\r\n            toast.error(\"Please select unique document type\");\r\n            return;\r\n        }\r\n        let adharFullName = event.target.nameOnDocument.value;\r\n        let verifiedData = \"\";\r\n        // checks for adhar verification\r\n        if (event.target.documentType.value == \"adhar\") {\r\n            if (adharVerification == -1) {\r\n                //call for verification code\r\n                try {\r\n                    let _authToken = await getAdharVerificationToken();\r\n                    // console.log(_authToken);\r\n                    setAuthToken(_authToken);\r\n                    let _otpVerificationClient = await generateAdharVerificationOTP(event.target.documentId.value, _authToken);\r\n                    // console.log(_otpVerificationClient);\r\n                    setOTPVerificationClient(_otpVerificationClient);\r\n                    setAdharVerification(0);\r\n                    props.setLoading(false);\r\n                    return;\r\n                } catch (error) {\r\n                    console.error(error);\r\n                    if (error.response.data.data.valid_aadhaar)\r\n                        toast.error(\"Adhar document id is invalid\");\r\n                    else if (error.response.data.data.otp_sent)\r\n                        toast.error(\"Error while sending OTP\");\r\n                    else\r\n                        toast.error(\"Error while adhar verification\");\r\n                    props.setLoading(false);\r\n                    return;\r\n                }\r\n            } else if (adharVerification == 0) {\r\n                //call for verify otp\r\n                try {\r\n                    let response = await submitAdharVerificationOTP(event.target.otp.value, otpVerificationClient, authToken);\r\n                    console.log(response);\r\n                    adharFullName = response.full_name;\r\n                    let res = {\r\n                        \"aadhaarNumber\": response.aadhaar_number,\r\n                        \"fullName\": response.full_name,\r\n                        \"gender\": response.gender,\r\n                        \"hasImage\": response.has_image,\r\n                        \"careOf\": response.care_of,\r\n                        \"address\": response.address,\r\n                        \"zip\": response.zip\r\n                    };\r\n                    verifiedData = JSON.stringify(res);\r\n                } catch (error) {\r\n                    console.error(error);\r\n                    toast.error(\"OTP verification failed\");\r\n                    props.setLoading(false);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        var formData = {\r\n            \"nameOnDocument\": adharFullName,\r\n            \"documentId\": event.target.documentId.value,\r\n            \"documentType\": event.target.documentType.value == \"other\" ? event.target.documentTypeText.value : event.target.documentType.value,\r\n            \"document\": event.target.documentFile.files[0],\r\n            \"status\": \"active\",\r\n            \"isVerified\": adharVerification == 0 ? true : false,\r\n            \"verifiedDocumentDetails\": verifiedData\r\n        }\r\n        console.log(formData, loginData.accessToken);\r\n        let res = await createDocument(formData, loginData.accessToken);\r\n        console.log(res);\r\n        if (res.success) {\r\n            let res = await getMyDocumentsDocument(loginData.accessToken);\r\n            console.log(res);\r\n            if (res.success) {\r\n                let arr = res.data.filter(function (ele) { return ele.status == \"active\" });\r\n                props.setDocumentsData(arr);\r\n            }\r\n            // var _allDocumentsData = [...props.documentsData];\r\n            // _allDocumentsData.push(res.data);\r\n            // props.setDocumentsData(_allDocumentsData);\r\n            // console.log(_allDocumentsData);\r\n            //reset verification\r\n            setAdharVerification(-1);\r\n            setOTPVerificationClient(\"\");\r\n            setAuthToken(\"\");\r\n        } else {\r\n            toast.error(\"Error while saving document data\");\r\n        }\r\n        props.setLoading(false);\r\n    }\r\n\r\n    const saveAllObjectData = async (password) => {\r\n        props.setLoading(true);\r\n        let encryptedCid = encrypt(props.documentsData[0].user_id);\r\n        // blockchain call\r\n        try {\r\n            var txId = await loginData.KYCContract.methods.updateCustomerData(loginData.username, encryptedCid, password).send({ from: loginData.walletAddress });\r\n            console.log(txId);\r\n            if (txId) {\r\n                toast.success(\"All data updated!\");\r\n            } else {\r\n                toast.error(\"Error while updateing Data\");\r\n                console.error(\"Error while  updateing Data\");\r\n            }\r\n        } catch (err) {\r\n            var text = err.message.substr(err.message.indexOf('\"message\": \"') + 12);\r\n            var message = text.substr(0, text.indexOf('\"'));\r\n            toast.error(message);\r\n            console.log(err.message);\r\n            // console.log(err);\r\n        }\r\n        props.setLoading(false);\r\n    }\r\n\r\n    const deleteObject = async (key, id) => {\r\n        props.setLoading(true);\r\n        let res = await deactivateDocument(id, loginData.accessToken);\r\n        console.log(res);\r\n        if (res.success) {\r\n            toast.success(\"Document deleted sucessfully\");\r\n        } else\r\n            toast.error(\"Error while deleting document\");\r\n        // var arr = [...props.documentsData];\r\n        // arr.splice(key, 1);\r\n        // props.setDocumentsData(arr);\r\n        //update my documents\r\n        res = await getMyDocumentsDocument(loginData.accessToken);\r\n        console.log(res);\r\n        if (res.success) {\r\n            props.setMyAllDocumentCount(res.data.length);\r\n            let arr = res.data.filter(function (ele) { return ele.status == \"active\" });\r\n            props.setDocumentsData(arr);\r\n        }\r\n        props.setLoading(false);\r\n    }\r\n\r\n    return (<>\r\n        <>\r\n            <ConfirmPasswordModal\r\n                modalshow={confirmPasswordmodalShow}\r\n                onhide={() => setConfirmPasswordModalShow(false)}\r\n                saveallobjectdata={saveAllObjectData}\r\n            />\r\n        </>\r\n        <Row>\r\n            <div className=\"page-heading\">\r\n                <h2> Add New Record</h2>\r\n                {/* <span> Add New Record</span> */}\r\n            </div>\r\n        </Row>\r\n        <Row style={{ padding: \"10px\" }}>\r\n            <label className=\"text-align-center color-red\">(Click on this button to save all changes)</label>\r\n            <Button onClick={() => setConfirmPasswordModalShow(true)}>Update All Data</Button>\r\n        </Row>\r\n        {props.documentsData.length > 0 ?\r\n            <div className=\"add-table\">\r\n                <Table striped bordered hover variant=\"light\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Document Type</th>\r\n                            <th>Name on Document</th>\r\n                            <th>Document ID</th>\r\n                            {/* <th>Address</th> */}\r\n                            <th>File Url</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {props.documentsData.map((data, key) => {\r\n                            return (\r\n                                <tr key={key}>\r\n                                    <td>{key + 1}</td>\r\n                                    <td>{data?.documentType}{data?.isVerified == \"true\" ? <i class=\"fa fa-check-circle\" aria-hidden=\"true\" style={{ color: \"blue\" }}></i> : <></>}</td>\r\n                                    <td style={{ wordBreak: \"break-all\" }}>{data?.nameOnDocument}</td>\r\n                                    <td>{data?.documentId}</td>\r\n                                    {/* <td>{data.address}</td> */}\r\n                                    <td style={{ wordBreak: \"break-all\" }}>{data?.fileUrl}</td>\r\n                                    <td>\r\n                                        <Button variant=\"danger\" onClick={() => deleteObject(key, data.id)}><i className=\"fa fa-trash\" aria-hidden=\"true\"></i></Button>\r\n                                    </td>\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n            : <></>}\r\n\r\n        <div className=\"title-heading\">\r\n            <h4>Add Document</h4>\r\n        </div>\r\n\r\n        {/* Format documents */}\r\n        <div className=\"add-new-access-form\">\r\n\r\n            <Form className=\"deal-form\" onSubmit={handleSubmit}>\r\n\r\n                <Row>\r\n                    <Col md=\"6\">\r\n                        <Form.Group className=\"mb-3\" controlId=\"formDocumentType\">\r\n                            <Form.Label controlId=\"documentType\">Select Document type</Form.Label><span className=\"color-red\">*</span>\r\n                            <br /><Form.Text className=\"text-muted\">Must be unique for each document</Form.Text>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col md=\"6\">\r\n                        <Form.Group className=\"mb-3\" controlId=\"formDocumentType\">\r\n                            <Form.Select id=\"documentType\" onChange={documentTypeUpadated} disabled={adharVerification == 0} required>\r\n                                <option value=''>-</option>\r\n                                {documentTypeList.map((data, key) => {\r\n                                    return (\r\n                                        <option key={key} value={data.value}>{data.text}</option>\r\n                                    );\r\n                                })}\r\n                            </Form.Select>\r\n                            {selectedDocumentTypeText ?\r\n                                <Form.Control type=\"text\" id=\"documentTypeText\" className=\"input-design\" placeholder=\"\" required /> :\r\n                                <></>\r\n                            }\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col md=\"6\">\r\n                        <Form.Group className=\"mb-3\" controlId=\"formNameOnDocument\">\r\n                            <Form.Label controlId=\"nameOnDocument\">Your Name</Form.Label><span className=\"color-red\">*</span><br />\r\n                            <Form.Text className=\"text-muted\" controlId=\"nameOnDocument\">As per written on document</Form.Text>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col md=\"6\">\r\n                        <Form.Group className=\"mb-3\" controlId=\"formNameOnDocument\">\r\n                            <Form.Control type=\"text\" id=\"nameOnDocument\" className=\"input-design\" placeholder=\"\" disabled={adharVerification == 0} required />\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md=\"6\">\r\n                        <Form.Group className=\"mb-3\" controlId=\"formDocumentId\">\r\n                            <Form.Label controlId=\"documentId\">Document ID</Form.Label><span className=\"color-red\">*</span>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col md=\"6\">\r\n                        <Form.Group className=\"mb-3\" controlId=\"formDocumentId\">\r\n                            <Form.Control type=\"text\" id=\"documentId\" className=\"input-design\" placeholder=\"\" disabled={adharVerification == 0} required />\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <br />\r\n                <Row>\r\n                    <Col md={9} className=\"offset-3\">\r\n                        <Form.Group className=\"mb-3  input-form\" controlId=\"formDocumentFile\">\r\n                            <Form.Control type=\"file\" id=\"documentFile\" className=\"input-design\"\r\n                                onChange={handleFileSelect}\r\n                                accept=\".pdf\"\r\n                                // image/*,.pdf\r\n                                placeholder=\"\" disabled={adharVerification == 0} required />\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <br />\r\n                {adharVerification == 0 ?\r\n                    <Row>\r\n                        <Col md=\"6\">\r\n                            <Form.Group className=\"mb-3\" controlId=\"fromOTP\">\r\n                                <Form.Label>OTP</Form.Label><br />\r\n                                <Form.Text className=\"text-muted\">Check your registered Document</Form.Text>\r\n                            </Form.Group>\r\n                        </Col>\r\n\r\n                        <Col md=\"6\">\r\n                            <Form.Group className=\"mb-3\" controlId=\"fromOTP\">\r\n                                <Form.Control type=\"text\" id=\"otp\" className=\"input-design\" placeholder=\"\" required />\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    : <></>}\r\n                <br />\r\n                <Row>\r\n                    <Col md={9} className=\"offset-3\">\r\n                        <Form.Group controlId=\"formSubmit\">\r\n                            <Button variant=\"dark\" type=\"submit\">SUBMIT</Button>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n            <br /><br /><br />\r\n        </div>\r\n\r\n    </>)\r\n}\r\n\r\nexport default AddNewRecord;","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Row, Col, Container, Button, Badge, Table, Tabs, Tab, Form, Spinner } from 'react-bootstrap';\r\nimport { toast } from \"react-toastify\";\r\nimport CustomerLogo from '../../components/images/user.png';\r\nimport SelectDocumentModal from \"../../components/page-components/selectDocumentModal\";\r\nimport PdfViewer from \"../../components/page-components/PdfViewer\";\r\nimport { useLocation, Redirect, useHistory } from \"react-router-dom\";\r\nimport { LoginContext } from \"../LoginContext\";\r\nimport { encrypt, decrypt } from '../../components/Encryption/file';\r\nimport { getMyDocumentsDocument, getDocument } from '../../components/api/ProjectCalls';\r\nimport AddNewRecord from \"./addnewrecord\";\r\n\r\n\r\nconst CustomerHome = (props) => {\r\n\r\n    const history = useHistory();\r\n    const [loginData, setLoginData] = useContext(LoginContext);\r\n\r\n    const [documentsData, setDocumentsData] = useState([\r\n        //     {\r\n        //     \"nameOnDocument\": \"Mayuresh Sunil Khemnar\",\r\n        //     \"documentId\": \"267907363292\",\r\n        //     \"documentType\": \"adhar\",\r\n        //     \"fileName\": \"This is sample pdf.pdf\",\r\n        //     \"fileType\": \"application/pdf\",\r\n        //     \"fileUrlHash\": \"document url\",\r\n        // }\r\n    ]);\r\n    const [myAllDocumentCount, setMyAllDocumentCount] = useState(0);\r\n    const [showDocumentURL, setShowDocumentURL] = useState(\"\");\r\n    const [selectedNavigation, setSelectedNavigation] = useState(\"dashboard\");\r\n    // Dashbord counts\r\n    const [allPendingRequestCount, setAllPendingRequestCount] = useState(0);\r\n    const [allAccessAllowedCount, setAllAccessAllowedCount] = useState(0);\r\n    // All reuests\r\n    const [allAccessRequestSelectedTab, setAllAccessRequestSelectedTab] = useState(\"requested\")\r\n    const [allRequestData, setAllRequestData] = useState([]);\r\n    // Access reuest data\r\n    const [accessRequestData, setAccessRequestData] = useState({});\r\n    // Access History \r\n    const [allAccessHistoryData, setAllAccessHistoryData] = useState([]);\r\n    // Show no access model\r\n    const [modalShow, setModalShow] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getAllRequests();\r\n        getAccessHistory();\r\n        getMyData();\r\n\r\n        // fix-the-react-memory-leak-\r\n        return () => {\r\n            setDocumentsData([]);\r\n        }\r\n    }, []);\r\n\r\n    const getMyData = async () => {\r\n        props.setLoading(true);\r\n        // var encryptedUrl = await loginData.KYCContract.methods.getMyData(loginData.username).call({ from: loginData.walletAddress });\r\n        // // console.log(encryptedUrl);\r\n        // if (encryptedUrl) {\r\n        //     let decryptedUrl = decrypt(encryptedUrl);\r\n        //     console.log(decryptedUrl);\r\n        //     let response = await fetch(decryptedUrl);\r\n        //     var objectData = await response.json();\r\n        //     console.log(objectData);\r\n        //     setDocumentsData(objectData);\r\n        // }\r\n        let res = await getMyDocumentsDocument(loginData.accessToken);\r\n        console.log(res);\r\n        if (res.success) {\r\n            setMyAllDocumentCount(res.data.length);\r\n            let arr = res.data.filter(function (ele) { return ele.status == \"active\" });\r\n            setDocumentsData(arr);\r\n        }\r\n        props.setLoading(false);\r\n    }\r\n\r\n    const showDocument = async (encryptedUrl) => {\r\n        // let decryptedUrl = decrypt(encryptedUrl);\r\n        // console.log(decryptedUrl);\r\n        // setShowDocumentURL(decryptedUrl);\r\n        let url = await getDocument(encryptedUrl);\r\n        setShowDocumentURL(url);\r\n    }\r\n\r\n    const getAllRequests = async () => {\r\n        props.setLoading(true);\r\n        var length = await loginData.KYCContract.methods.getAllMyCustomersRequestsLength(loginData.username).call({ from: loginData.walletAddress });\r\n        // console.log(length);\r\n        var allRequests = [];\r\n        var pendingRequestCount = 0;\r\n        var accessAllowedCount = 0;\r\n        for (let i = 0; i < length; i++) {\r\n            var MerchantName = await loginData.KYCContract.methods.getAllMyCustomersRequestsData(loginData.username, i).call({ from: loginData.walletAddress });\r\n            console.log(MerchantName);\r\n            var result = await loginData.KYCContract.methods.getAllRequestsData(MerchantName, loginData.username).call({ from: loginData.walletAddress });\r\n            console.log(result);\r\n            if (result.status == 1)\r\n                pendingRequestCount++;\r\n            else if (result.status == 2)\r\n                if (parseInt(new Date().getTime() / 1000) < result.closeTime)\r\n                    accessAllowedCount++;\r\n            var obj = {\r\n                \"merchantName\": MerchantName,\r\n                \"info\": result.info,\r\n                \"status\": result.status,\r\n                \"timestamp\": result.timestamp,\r\n                \"openTime\": result.openTime,\r\n                \"closeTime\": result.closeTime,\r\n                \"documentsAllowed\": result.documentsAllowed\r\n            }\r\n            allRequests.push(obj);\r\n        }\r\n        setAllPendingRequestCount(pendingRequestCount);\r\n        setAllAccessAllowedCount(accessAllowedCount);\r\n        setAllRequestData(allRequests);\r\n        props.setLoading(false);\r\n    }\r\n\r\n    const getAccessHistory = async () => {\r\n        props.setLoading(true);\r\n        var length = await loginData.KYCContract.methods.getAllMyAccessHistoryLength(loginData.username).call({ from: loginData.walletAddress });\r\n        // console.log(length);\r\n        var allAccessHistory = [];\r\n        for (let i = 0; i < length; i++) {\r\n            var result = await loginData.KYCContract.methods.getMyAccessHistoryData(loginData.username, i).call({ from: loginData.walletAddress });\r\n            console.log(result);\r\n            var obj = {\r\n                \"merchantName\": result.fromUsername,\r\n                \"info\": result.info,\r\n                \"fromTimestamp\": result.fromTimestamp,\r\n                \"toTimestamp\": result.toTimestamp\r\n            }\r\n            allAccessHistory.push(obj);\r\n        }\r\n        setAllAccessHistoryData(allAccessHistory);\r\n        console.log(allAccessHistory);\r\n        props.setLoading(false);\r\n    }\r\n\r\n    const approveRequest = async (data, documentList, closeTime) => {\r\n        props.setLoading(true);\r\n        let encryptedDocumentList = encrypt(documentList);\r\n        try {\r\n            var txId = await loginData.KYCContract.methods.approveRequest(data.merchantName, loginData.username, encryptedDocumentList, closeTime).send({ from: loginData.walletAddress });\r\n            console.log(txId);\r\n            if (txId) {\r\n                toast.success(\"Request approved successfully!\");\r\n                getAllRequests();\r\n                getAccessHistory();\r\n            } else {\r\n                toast.error(\"Error while approving Request\");\r\n                console.error(\"Error while approving Request\");\r\n            }\r\n        } catch (err) {\r\n            var text = err.message.substr(err.message.indexOf('\"message\": \"') + 12);\r\n            var message = text.substr(0, text.indexOf('\"'));\r\n            toast.error(message);\r\n            console.log(err.message);\r\n            // console.log(err);\r\n        }\r\n        props.setLoading(false);\r\n    }\r\n\r\n    const rejectRequest = async (data) => {\r\n        props.setLoading(true);\r\n        try {\r\n            var txId = await loginData.KYCContract.methods.rejectRequest(data.merchantName, loginData.username).send({ from: loginData.walletAddress });\r\n            console.log(txId);\r\n            if (txId) {\r\n                getAllRequests();\r\n                getAccessHistory();\r\n                toast.success(\"Request rejected successfully!\");\r\n            } else {\r\n                toast.error(\"Error while rejecting Request\");\r\n                console.error(\"Error while rejecting Request\");\r\n            }\r\n        } catch (err) {\r\n            var text = err.message.substr(err.message.indexOf('\"message\": \"') + 12);\r\n            var message = text.substr(0, text.indexOf('\"'));\r\n            toast.error(message);\r\n            console.log(err.message);\r\n        }\r\n        props.setLoading(false);\r\n    }\r\n\r\n    const closeRequest = async (data) => {\r\n        props.setLoading(true);\r\n        try {\r\n            var txId = await loginData.KYCContract.methods.closeAccess(data.merchantName, loginData.username).send({ from: loginData.walletAddress });\r\n            console.log(txId);\r\n            if (txId) {\r\n                getAllRequests();\r\n                getAccessHistory();\r\n                toast.success(\"Access closed successfully!\");\r\n            } else {\r\n                toast.error(\"Error while rejecting Request\");\r\n                console.error(\"Error while rejecting Request\");\r\n            }\r\n        } catch (err) {\r\n            var text = err.message.substr(err.message.indexOf('\"message\": \"') + 12);\r\n            var message = text.substr(0, text.indexOf('\"'));\r\n            toast.error(message);\r\n            console.log(err.message);\r\n        }\r\n        props.setLoading(false);\r\n    }\r\n\r\n    const getDocumentsAllowedString=(s)=>{\r\n        let str=\"\";\r\n        let keysArray=Object.keys(s);\r\n        keysArray.forEach((ele,i)=>{\r\n            str+=ele+\" : \"+s[ele];\r\n            // str+=i<keysArray.length?\"\\n\":\"\";\r\n        });\r\n        return str;\r\n    }\r\n\r\n    return (\r\n        loginData.isConnected ? <>\r\n        <input type=\"checkbox\" id=\"side\" name=\"\" value=\"\" />  \r\n            <div className=\"main-data-row page-wrap\">\r\n                <>\r\n                    <SelectDocumentModal\r\n                        modalshow={modalShow}\r\n                        onhide={() => setModalShow(false)}\r\n                        documentsdata={documentsData}\r\n                        accessrequestdata={accessRequestData}\r\n                        approverequest={approveRequest}\r\n                    />\r\n                </>\r\n\r\n                <div className=\"side-bar-menu sidebar\">\r\n                    <div className=\"homepage-navigation \">\r\n                        <div className=\"menu-user\">\r\n                         <div className=\"user-img\"><img src={CustomerLogo}/></div>\r\n                         <p>Customer</p>   \r\n                        </div>\r\n                        <ul>\r\n                            <li><Button variant=\"secondary\" size=\"lg\" className={selectedNavigation == \"dashboard\" ? \"active\" : \"\"} onClick={() => setSelectedNavigation(\"dashboard\")}><i className=\"fa fa-tachometer\" aria-hidden=\"true\"></i> Dashboard</Button></li>\r\n                            <li><Button variant=\"secondary\" size=\"lg\" className={selectedNavigation == \"mydocuments\" ? \"active\" : \"\"} onClick={() => setSelectedNavigation(\"mydocuments\")}><i className=\"fa fa-user\" aria-hidden=\"true\"></i> My Documents</Button></li>\r\n                            <li><Button variant=\"secondary\" size=\"lg\" className={selectedNavigation == \"allaccessrequest\" ? \"active\" : \"\"} onClick={() => setSelectedNavigation(\"allaccessrequest\")}><i className=\"fa fa-key\" aria-hidden=\"true\"></i> All Access Request</Button></li>\r\n                            <li><Button variant=\"secondary\" size=\"lg\" className={selectedNavigation == \"accesshistory\" ? \"active\" : \"\"} onClick={() => setSelectedNavigation(\"accesshistory\")}><i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i> Access History</Button></li>\r\n                            <li><Button variant=\"secondary\" size=\"lg\" className={selectedNavigation == \"addnewrecord\" ? \"active\" : \"\"} onClick={() => setSelectedNavigation(\"addnewrecord\")}><i className=\"fa fa-plus-square-o\" aria-hidden=\"true\"></i> Add New Record</Button></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"dashboard-content page-content\">\r\n                <label for=\"side\" class=\"toggle\">☰</label>\r\n                    <Row className=\"homepage-pageData\">\r\n                        {/* dashboard page */}\r\n                        {selectedNavigation == \"dashboard\" ?\r\n                            <>\r\n                                <div className=\"page-heading\">\r\n                                    <h2> Welcome to KYC!</h2>\r\n                                    <span> An KYC authentication using blockchain.</span>\r\n                                    <br /><br />\r\n                                </div>\r\n                                <Row>\r\n                                    <Row className=\"dashboard-summary-details\">\r\n                                        <Col md={4}>\r\n                                            <Button variant=\"primary\" size=\"lg\" onClick={() => setSelectedNavigation(\"mydocuments\")}>\r\n                                                My Documents <Badge bg=\"secondary\">{documentsData.length}</Badge>\r\n                                                <span className=\"visually-hidden\">My Documents {documentsData.length}</span>\r\n                                            </Button>\r\n                                        </Col>\r\n                                        <Col md={4}>\r\n                                            <Button variant=\"primary\" size=\"lg\" onClick={() => { setSelectedNavigation(\"allaccessrequest\"); setAllAccessRequestSelectedTab(\"requested\"); }}>\r\n                                                Pending Requests <Badge bg=\"secondary\">{allPendingRequestCount}</Badge>\r\n                                                <span className=\"visually-hidden\">Pending Requests {allPendingRequestCount}</span>\r\n                                            </Button>\r\n                                        </Col>\r\n                                        <Col md={4}>\r\n                                            <Button variant=\"primary\" size=\"lg\" onClick={() => { setSelectedNavigation(\"allaccessrequest\"); setAllAccessRequestSelectedTab(\"approved\"); }}>\r\n                                                Access Allowed <Badge bg=\"secondary\">{allAccessAllowedCount}</Badge>\r\n                                                <span className=\"visually-hidden\">Allowed Requests {allAccessAllowedCount}</span>\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Row>\r\n                            </> :\r\n                            <></>}\r\n\r\n                        {/*  mydocuments page */}\r\n                        {selectedNavigation == \"mydocuments\" ?\r\n                            <>\r\n                                <div className=\"page-heading\">\r\n                                    <h2> My Documents</h2>\r\n                                    <span> All your uploaded doucments</span>\r\n                                </div>\r\n                                <Row>\r\n                                    {documentsData.length > 0 ?\r\n                                        <Table striped bordered hover variant=\"light\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>#</th>\r\n                                                    <th>Document Type</th>\r\n                                                    <th>Name on Document</th>\r\n                                                    <th>Document ID</th>\r\n                                                    {/* <th>Address</th> */}\r\n                                                    <th>File Url Hash</th>\r\n                                                    <th>Actions</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {documentsData.map((data, key) => {\r\n                                                    return (\r\n                                                        <tr key={key}>\r\n                                                            <td>{key + 1}</td>\r\n                                                            <td>{data.documentType} {data.isVerified == \"true\" ? <i class=\"fa fa-check-circle\" aria-hidden=\"true\" style={{ color: \"blue\" }}></i> : <></>}</td>\r\n                                                            <td style={{ wordBreak: \"break-all\" }}>{data.nameOnDocument}</td>\r\n                                                            <td>{data.documentId}</td>\r\n                                                            {/* <td>{data.address}</td> */}\r\n                                                            <td style={{ wordBreak: \"break-all\" }}>{encrypt(data.fileUrl)}</td>\r\n                                                            <td>\r\n                                                                <Button onClick={() => showDocument(data.fileUrl)}>Show</Button>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    );\r\n                                                })}\r\n                                            </tbody>\r\n                                        </Table>\r\n                                        : <span className=\"color-red\">No data found</span>}\r\n                                </Row>\r\n                                {showDocumentURL || showDocumentURL != \"\" ?\r\n                                    <Row>\r\n                                        <Button variant=\"dark\" onClick={() => setShowDocumentURL(\"\")}>Close View</Button>\r\n                                        {/* <PdfViewer pdf={showDocumentURL} \r\n                                                setShowDocumentURL={setShowDocumentURL}/> */}\r\n                                        <embed src={showDocumentURL} width=\"100%\" height=\"500px\" />\r\n                                    </Row>\r\n                                    : <></>\r\n                                }\r\n                            </> :\r\n                            <></>}\r\n                        {/*  allaccessrequest page */}\r\n                        {selectedNavigation == \"allaccessrequest\" ?\r\n                            <>\r\n                                <div className=\"page-heading\">\r\n                                    <h2> All Access Request</h2>\r\n                                    {/* <span> All Access Requests.</span> */}\r\n                                </div>\r\n                                <Tabs id=\"AllAccessRequestTab\" className=\"mb-3\"\r\n                                    activeKey={allAccessRequestSelectedTab}\r\n                                    onSelect={(k) => setAllAccessRequestSelectedTab(k)} >\r\n                                    <Tab eventKey=\"requested\" title=\"Requested\">\r\n                                        <Row>\r\n                                            <Table striped bordered hover variant=\"light\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th>#</th>\r\n                                                        <th>Merchant Name</th>\r\n                                                        <th>Info</th>\r\n                                                        <th>Documents Allowed</th>\r\n                                                        <th>Status</th>\r\n                                                        <th>Request Send On</th>\r\n                                                        <th>Actions</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {allRequestData.map((data, key) => {\r\n                                                        return (\r\n                                                            data.status == 1 ?\r\n                                                                <tr key={key}>\r\n                                                                    <td>{key + 1}</td>\r\n                                                                    <td>{data.merchantName}</td>\r\n                                                                    <td>{data.info}</td>\r\n                                                                    <td>{getDocumentsAllowedString(JSON.parse(data.documentsAllowed))}</td>\r\n                                                                    <td>Requested</td>\r\n                                                                    <td>{new Date(parseInt(data.timestamp * 1000)).toLocaleString()}</td>\r\n                                                                    <td>\r\n                                                                        <Button onClick={() => { setAccessRequestData(data); setModalShow(true); }}> Approve </Button>\r\n                                                                        <Button variant=\"danger\" onClick={() => rejectRequest(data)}> Reject </Button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                                : <></>\r\n                                                        );\r\n                                                    })}\r\n                                                </tbody>\r\n                                            </Table>\r\n                                        </Row>\r\n                                    </Tab>\r\n                                    <Tab eventKey=\"approved\" title=\"Approved\">\r\n                                        <Row>\r\n                                            <Table striped bordered hover variant=\"light\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th>#</th>\r\n                                                        <th>Merchant Name</th>\r\n                                                        <th>Info</th>\r\n                                                        <th>Status</th>\r\n                                                        <th>Request Send Timestamp</th>\r\n                                                        <th>Access Open Timestamp</th>\r\n                                                        <th>Access Close Timestamp</th>\r\n                                                        <th>Actions</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {allRequestData.map((data, key) => {\r\n                                                        return (\r\n                                                            data.status == 2 && parseInt(new Date().getTime() / 1000) < data.closeTime ?\r\n                                                                <tr key={key}>\r\n                                                                    <td>{key + 1}</td>\r\n                                                                    <td>{data.merchantName}</td>\r\n                                                                    <td>{data.info}</td>\r\n                                                                    <td>Approved</td>\r\n                                                                    <td>{new Date(parseInt(data.timestamp * 1000)).toLocaleString()}</td>\r\n                                                                    <td>{data.openTime == 0 ? \"-\" : new Date(parseInt(data.openTime * 1000)).toLocaleString()}</td>\r\n                                                                    <td>{data.closeTime == 0 ? \"-\" : new Date(parseInt(data.closeTime * 1000)).toLocaleString()}</td>\r\n                                                                    <td>\r\n                                                                        {parseInt(new Date().getTime() / 1000) < data.closeTime ?\r\n                                                                            <Button variant=\"danger\" onClick={() => closeRequest(data)}> Close Access Now </Button>\r\n                                                                            : <></>}\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                                : <></>\r\n                                                        );\r\n                                                    })}\r\n                                                </tbody>\r\n                                            </Table>\r\n\r\n                                        </Row>\r\n                                    </Tab>\r\n                                    <Tab eventKey=\"rejected\" title=\"Rejected\">\r\n                                        <Row>\r\n                                            <Table striped bordered hover variant=\"light\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th>#</th>\r\n                                                        <th>Merchant Name</th>\r\n                                                        <th>Info</th>\r\n                                                        <th>Status</th>\r\n                                                        <th>Request Send Timestamp</th>\r\n                                                        <th>Access Open Timestamp</th>\r\n                                                        <th>Access Close Timestamp</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {allRequestData.map((data, key) => {\r\n                                                        return (\r\n                                                            data.status == -1 ?\r\n                                                                <tr key={key}>\r\n                                                                    <td>{key + 1}</td>\r\n                                                                    <td>{data.merchantName}</td>\r\n                                                                    <td>{data.info}</td>\r\n                                                                    <td>Rejected</td>\r\n                                                                    <td>{new Date(parseInt(data.timestamp * 1000)).toLocaleString()}</td>\r\n                                                                    <td>{data.openTime == 0 ? \"-\" : new Date(parseInt(data.openTime * 1000)).toLocaleString()}</td>\r\n                                                                    <td>{data.closeTime == 0 ? \"-\" : new Date(parseInt(data.closeTime * 1000)).toLocaleString()}</td>\r\n                                                                </tr>\r\n                                                                : <></>\r\n                                                        );\r\n                                                    })}\r\n                                                </tbody>\r\n                                            </Table>\r\n\r\n                                        </Row>\r\n                                    </Tab>\r\n                                    <Tab eventKey=\"closed\" title=\"Closed\">\r\n                                        <Row>\r\n                                            <Table striped bordered hover variant=\"light\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th>#</th>\r\n                                                        <th>Merchant Name</th>\r\n                                                        <th>Info</th>\r\n                                                        <th>Status</th>\r\n                                                        <th>Request Send Timestamp</th>\r\n                                                        <th>Access Open Timestamp</th>\r\n                                                        <th>Access Close Timestamp</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {allRequestData.map((data, key) => {\r\n                                                        return (\r\n                                                            data.status == 3 || parseInt(new Date().getTime() / 1000) > data.closeTime ?\r\n                                                                <tr key={key}>\r\n                                                                    <td>{key + 1}</td>\r\n                                                                    <td>{data.merchantName}</td>\r\n                                                                    <td>{data.info}</td>\r\n                                                                    <td>Closed</td>\r\n                                                                    <td>{new Date(parseInt(data.timestamp * 1000)).toLocaleString()}</td>\r\n                                                                    <td>{data.openTime == 0 ? \"-\" : new Date(parseInt(data.openTime * 1000)).toLocaleString()}</td>\r\n                                                                    <td>{data.closeTime == 0 ? \"-\" : new Date(parseInt(data.closeTime * 1000)).toLocaleString()}</td>\r\n                                                                </tr>\r\n                                                                : <></>\r\n                                                        );\r\n                                                    })}\r\n                                                </tbody>\r\n                                            </Table>\r\n\r\n                                        </Row>\r\n                                    </Tab>\r\n                                    <Tab eventKey=\"all\" title=\"All\">\r\n                                        <Row>\r\n                                            <Table striped bordered hover variant=\"light\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th>#</th>\r\n                                                        <th>Merchant Name</th>\r\n                                                        <th>Info</th>\r\n                                                        <th>Status</th>\r\n                                                        <th>Request Send Timestamp</th>\r\n                                                        <th>Access Open Timestamp</th>\r\n                                                        <th>Access Close Timestamp</th>\r\n                                                        <th>Actions</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {allRequestData.map((data, key) => {\r\n                                                        return (\r\n                                                            <tr key={key}>\r\n                                                                <td>{key + 1}</td>\r\n                                                                <td>{data.merchantName}</td>\r\n                                                                <td>{data.info}</td>\r\n                                                                <td>{data.status == 1 ? \"Requested\" :\r\n                                                                    data.status == 2 ? \"Approved\" :\r\n                                                                        data.status == -1 ? \"Rejected\" : \"Closed\"}</td>\r\n                                                                <td>{new Date(parseInt(data.timestamp * 1000)).toLocaleString()}</td>\r\n                                                                <td>{data.openTime == 0 ? \"-\" : new Date(parseInt(data.openTime * 1000)).toLocaleString()}</td>\r\n                                                                <td>{data.closeTime == 0 ? \"-\" : new Date(parseInt(data.closeTime * 1000)).toLocaleString()}</td>\r\n                                                                <td>\r\n                                                                    {data.status == 1 ?\r\n                                                                        <>\r\n                                                                            <Button onClick={() => { setAccessRequestData(data); setModalShow(true); }}> Approve </Button>\r\n                                                                            <Button variant=\"danger\" onClick={() => rejectRequest(data)}> Reject </Button>\r\n                                                                        </> :\r\n                                                                        data.status == 2 && parseInt(new Date().getTime() / 1000) < data.closeTime ?\r\n                                                                            <Button variant=\"danger\" onClick={() => closeRequest(data)}> Close Access Now </Button>\r\n                                                                            : <></>}\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        );\r\n                                                    })}\r\n                                                </tbody>\r\n                                            </Table>\r\n\r\n                                        </Row>\r\n                                    </Tab>\r\n                                </Tabs>\r\n\r\n                            </> :\r\n                            <></>}\r\n                        {/*  accesshistory page */}\r\n                        {selectedNavigation == \"accesshistory\" ?\r\n                            <>\r\n                                <div className=\"page-heading\">\r\n                                    <h2> Access History</h2>\r\n                                    <span> All details of merchants who has access to your document with access time duration.</span>\r\n                                    <br /><br />\r\n                                </div>\r\n                                <Row>\r\n                                    {allAccessHistoryData.length > 0 ?\r\n                                        <Table striped bordered hover variant=\"light\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>#</th>\r\n                                                    <th>Merchant Name</th>\r\n                                                    <th>Info</th>\r\n                                                    <th>From</th>\r\n                                                    <th>To</th>\r\n                                                    <th>Actions</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {allAccessHistoryData.map((data, key) => {\r\n                                                    return (\r\n                                                        <tr key={key}>\r\n                                                            <td>{key + 1}</td>\r\n                                                            <td>{data.merchantName}</td>\r\n                                                            <td>{data.info}</td>\r\n                                                            <td>{new Date(parseInt(data.fromTimestamp * 1000)).toLocaleString()}</td>\r\n                                                            <td>{data.toTimestamp == 0 ? \"-\" : new Date(parseInt(data.toTimestamp * 1000)).toLocaleString()}</td>\r\n                                                            <td>\r\n                                                                {data.toTimestamp == 0 && parseInt(new Date().getTime() / 1000) < data.closeTime ?\r\n                                                                    <Button variant=\"danger\" onClick={() => closeRequest(data)}> Close Access Now </Button>\r\n                                                                    : <></>}\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    );\r\n                                                })}\r\n                                            </tbody>\r\n                                        </Table>\r\n                                        : <span className=\"color-red\">No data found</span>}\r\n                                </Row>\r\n                            </> :\r\n                            <></>}\r\n                        {/*  addnewrecord page */}\r\n                        {selectedNavigation == \"addnewrecord\" ?\r\n                            <AddNewRecord\r\n                                documentsData={documentsData}\r\n                                setDocumentsData={setDocumentsData}\r\n                                myAllDocumentCount={myAllDocumentCount}\r\n                                setMyAllDocumentCount={setMyAllDocumentCount}\r\n                                setLoading={props.setLoading}\r\n                                loading={props.loading}\r\n                            /> :\r\n                            <></>}\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        </> : <Redirect to=\"/\"></Redirect>)\r\n}\r\n\r\nexport default CustomerHome","import Web3 from 'web3';\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\nimport { Button, Form, Container, Row, Col } from \"react-bootstrap\";\r\nimport { toast } from 'react-toastify'; //toster\r\nimport { address, abi } from '../../components/contracts/ContractData';\r\nimport { tokenAddress, tokenABI } from '../../components/contracts/INRTTokenContractData';\r\nimport { createMerchant, userLogin } from '../../components/api/ProjectCalls';\r\nimport '../../components/css/style.css';\r\n\r\n// Route to contribute page \r\nimport { useHistory } from \"react-router-dom\";\r\nimport { LoginContext } from '../LoginContext';\r\n\r\nfunction MerchantLogin(props) {\r\n  const [loginData, setLoginData] = useContext(LoginContext);\r\n  const [username, setUsername] = useState('');\r\n  const [pageType, setPageType] = useState(0); // 0 for login, 1 for sign up\r\n\r\n  // jump to another page\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem('rememberMe')) {\r\n      const username = localStorage.getItem('merchant_username')\r\n      setUsername(username)\r\n    }\r\n    if (window.ethereum) {\r\n      window.ethereum.on('chainChanged', () => {\r\n        window.location.reload();\r\n      })\r\n      window.ethereum.on('accountsChanged', function (accounts) {\r\n        // Time to reload your interface with accounts[0]!\r\n        connect();\r\n      });\r\n      connect();\r\n    }\r\n  }, [])\r\n\r\n  async function connect() {\r\n    let web3;\r\n    let KYCContract, INRTContract;\r\n    //connect to web3\r\n    if (typeof window !== 'undefined' && typeof window.web3 !== 'undefined') {\r\n      //we are in the browser and metamask is running\r\n      //ETH test net 3,  // mainnet 1\r\n      // BSC test net 97  //mainnet 56\r\n      web3 = new Web3(window.web3.currentProvider);\r\n      let netId = await web3.eth.net.getId();\r\n      var networkName = \"\";\r\n      console.log(netId);\r\n      switch (netId) {\r\n        case 97:\r\n          networkName = 'BSC'\r\n          console.log('Network is BSC mainnet')\r\n          break\r\n        default:\r\n          toast.error('Please select mainnet first')\r\n          console.error('Please select mainnet first')\r\n          return;\r\n      }\r\n      //set details\r\n      //log network\r\n      web3.eth.net.getNetworkType().then(console.log);\r\n      let accounts;\r\n      try {\r\n        accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n      } catch (error) {\r\n        if (error.code === 4001) {\r\n          console.error(\"Please allow metamask to connect\")\r\n        }\r\n        return;\r\n        // console.log(error)\r\n      }\r\n      console.log(accounts)\r\n      if (accounts.length < 1) {\r\n        console.error('Please unlock metamask wallet first!')\r\n        return;\r\n      }\r\n      console.log(accounts[0]);\r\n\r\n      KYCContract = new web3.eth.Contract(abi, address);\r\n      INRTContract = new web3.eth.Contract(tokenABI, tokenAddress);\r\n      setLoginData({\r\n        walletAddress: accounts[0],\r\n        isConnected: true,\r\n        username: \"\",\r\n        web3: web3,\r\n        role: null,\r\n        KYCContract: KYCContract,\r\n        INRTContract: INRTContract\r\n      });\r\n\r\n    } else {\r\n      //on the browser or user is not running metamask\r\n      console.error(\"Metamask wallet not found! Please make sure wallet is installed and running!\");\r\n    }\r\n  }\r\n\r\n  const handleSubmit = async (event) => {\r\n    props.setLoading(true);\r\n    event.preventDefault();\r\n    const user = {\r\n      username: event.target.username.value,\r\n      password: event.target.password.value\r\n    }\r\n    localStorage.setItem('rememberMe', event.target.rememberMe.checked)\r\n    localStorage.setItem('merchant_username', username)\r\n\r\n    if (pageType == 0) { //Login\r\n      if (loginData.connect == false) {\r\n        connect();\r\n        // toast.error(\"Please connect metamask first\");\r\n        // props.setLoading(false);\r\n        // return;\r\n      }\r\n      try {\r\n        var result = await loginData.KYCContract.methods.merchantLogin(user.username, user.password).call({ from: loginData.walletAddress });\r\n        console.log(result);\r\n\r\n        if (result[0]) {\r\n          try {\r\n            let res = await userLogin(user.username, user.password);\r\n            console.log(res);\r\n            if (res.success) {\r\n              setLoginData({ ...loginData, ...{ username: user.username, role: res.response.user.role, accessToken: res.response.accessToken } });\r\n              //navigate to admin page\r\n              history.push('/merchant/home');\r\n            } else\r\n              toast.error(\"Error while login call\");\r\n          } catch (err) {\r\n            toast.error(err.message);\r\n            console.log(err.message);\r\n          }\r\n        }\r\n      } catch (err) {\r\n        var text = err.message.substr(err.message.indexOf('\"message\": \"') + 12);\r\n        var message = text.substr(0, text.indexOf('\"'));\r\n        toast.error(message);\r\n        console.log(err.message);\r\n      }\r\n    } else { //SignUP\r\n      if (loginData.connect == false) {\r\n        toast.error(\"Please connect metamask first\");\r\n        return;\r\n      }\r\n      try {\r\n        var txId = await loginData.KYCContract.methods.createMerchant(user.username, user.password).send({ from: loginData.walletAddress });\r\n        console.log(txId);\r\n        if (txId) {\r\n          var result = txId.events.MerchantAdded.returnValues;\r\n          let res = await createMerchant(user.username, user.password, loginData.walletAddress);\r\n          console.log(res);\r\n          if (res.success) {\r\n            toast.success(\"Account created successfully!\");\r\n          } else\r\n            toast.error(\"Error while create account call\");\r\n        } else {\r\n          toast.error(\"Error while creating account\");\r\n          console.error(\"Error while creating account\");\r\n        }\r\n      } catch (err) {\r\n        // var text=err.message.substr(err.message.indexOf('\"message\": \"')+12);\r\n        // var message=text.substr(0,text.indexOf('\"'));\r\n        // toast.error(message);\r\n        console.log(err.message);\r\n      }\r\n    }\r\n\r\n    props.setLoading(false);\r\n  }\r\n\r\n  const handleUsername = (event) => {\r\n    setUsername(event.target.value);\r\n  }\r\n\r\n  return (<>\r\n\r\n    <Container>\r\n      <div className='login-page'>\r\n        <div className=\"home-heading\">\r\n          <h2> {pageType == 0 ? \"Merchant Login\" : \"Merchant Sign Up\"}</h2>\r\n        </div>\r\n\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Group className=\"mb-3\" controlId=\"username\">\r\n            <Form.Label for=\"username\">Username<span className=\"color-red\">*</span></Form.Label>\r\n            <Form.Control className=\"input-design\" type=\"username\" id=\"username\" placeholder=\"Enter Username\" value={username} onChange={handleUsername} required />\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"password\">\r\n            <Form.Label for=\"password\">Password<span className=\"color-red\">*</span></Form.Label>\r\n            <Form.Control className=\"input-design\" type=\"password\" id=\"password\" placeholder=\"Password\" required />\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"rememberMe\">\r\n            <Form.Check type=\"checkbox\" id=\"rememberMe\" label=\"Remember me \" />\r\n          </Form.Group>\r\n\r\n          <div className='btn-row'>\r\n            <Button variant=\"primary\" type=\"submit\" disabled={props.loading}>\r\n              {pageType == 0 ? \"Login\" : \"Sign Up\"}\r\n            </Button>\r\n          </div>\r\n\r\n          <div className='login-sp-text'>\r\n            {pageType == 0 ?\r\n              <p className=\"nt-member text-align-right\">Not a Merchant? <a href=\"#\" onClick={() => setPageType(1)}>Sign up now</a></p>\r\n              :\r\n              <p className=\"nt-member text-align-right\">already a Merchant? <a href=\"#\" onClick={() => setPageType(0)}>Login now</a></p>}\r\n          </div>\r\n\r\n        </Form>\r\n      </div>\r\n      <br /><br /><br />\r\n\r\n    </Container>\r\n  </>\r\n  )\r\n}\r\nexport default MerchantLogin;\r\n\r\n\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Row, Col, Container, Button, Badge, Tab, Tabs, Table, Form, Tooltip } from 'react-bootstrap';\r\nimport { toast } from \"react-toastify\";\r\nimport '../../components/css/style.css';\r\nimport { address } from '../../components/contracts/ContractData';\r\nimport MerchantLogo from '../../components/images/merchant.png';\r\n\r\nimport { getUserDataByUserId, getDocument, getUserDocTypeList } from '../../components/api/ProjectCalls';\r\nimport PdfViewer from \"../../components/page-components/PdfViewer\";\r\nimport { useLocation, Redirect, useHistory } from \"react-router-dom\";\r\nimport { LoginContext } from \"../LoginContext\";\r\nimport { encrypt, decrypt } from '../../components/Encryption/file';\r\n\r\nconst MerchantHomePage = (props) => {\r\n\r\n    const history = useHistory();\r\n    const [isDocumentDownloadable, setIsDocumentDownloadable] = useState(false);\r\n    const [showDocumentURL, setShowDocumentURL] = useState(\"\");\r\n    const [documentAccessData, setDocumentAccessData] = useState({});\r\n    const [documentsData, setDocumentsData] = useState([]);\r\n    const [selectedNavigation, setSelectedNavigation] = useState(\"dashboard\");\r\n    const [loginData, setLoginData] = useContext(LoginContext);\r\n    // Dashbord counts\r\n    const [allPendingRequestCount, setAllPendingRequestCount] = useState(0);\r\n    const [allAccessAllowedCount, setAllAccessAllowedCount] = useState(0);\r\n    const [myReferralTokenCount, setMyReferralTokenCount] = useState(0);\r\n    // All reuests\r\n    const [allAccessRequestSelectedTab, setAllAccessRequestSelectedTab] = useState(\"requested\")\r\n    const [allRequestData, setAllRequestData] = useState([]);\r\n    //add new request\r\n    const [userDocumentTypeList, setUserDocumentTypeList] = useState([]);\r\n\r\n    //All access allowed users  \r\n    const [allowedAccessUserList, setAllowedAccessUserList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getAllRequests();\r\n        getMyReferralRewardCount();\r\n    }, []);\r\n\r\n    const getMyReferralRewardCount = async () => {\r\n        var result = await loginData.KYCContract.methods.merchantReferralRewardCount(loginData.username).call({ from: loginData.walletAddress });\r\n        // console.log(result);\r\n        setMyReferralTokenCount(result);\r\n    }\r\n\r\n    //claim Referral Tokens\r\n    const claimReferralTokens = async () => {\r\n        props.setLoading(true);\r\n        if (myReferralTokenCount > 0) {\r\n            try {\r\n                var tx = await loginData.KYCContract.methods.claimMerchantReferralReward(loginData.username).send({ from: loginData.walletAddress });\r\n                console.log(tx);\r\n                if (tx) {\r\n                    toast.success(\"Referral Reward Claimed\");\r\n                    await getMyReferralRewardCount();\r\n                    //update my balance\r\n                    var result = await loginData.INRTContract.methods.balanceOf(loginData.walletAddress).call();\r\n                    console.log(result);\r\n                    if (props.tokenCount != result)\r\n                        props.setTokenCount(result / 10 ** 6);\r\n                }\r\n            } catch (err) {\r\n                toast.error(\"Error while claiming reward\");\r\n                console.log(err.message);\r\n            }\r\n        } else\r\n            toast.error(\"You don't have any referrals\");\r\n        props.setLoading(false);\r\n    }\r\n\r\n    const getAllRequests = async () => {\r\n        props.setLoading(true);\r\n        var length = await loginData.KYCContract.methods.getAllMyMerchantsRequestsLength(loginData.username).call({ from: loginData.walletAddress });\r\n        // console.log(length);\r\n        var allRequests = [];\r\n        var allowedAccessUsers = [];\r\n        var pendingRequestCount = 0;\r\n        var accessAllowedCount = 0;\r\n        for (let i = 0; i < length; i++) {\r\n            var CustomerName = await loginData.KYCContract.methods.getAllMyMerchantsRequestsData(loginData.username, i).call({ from: loginData.walletAddress });\r\n            console.log(CustomerName);\r\n            var result = await loginData.KYCContract.methods.getAllRequestsData(loginData.username, CustomerName).call({ from: loginData.walletAddress });\r\n            console.log(result);\r\n            if (result.status == 1)\r\n                pendingRequestCount++;\r\n            else if (result.status == 2) {\r\n                if (parseInt(new Date().getTime() / 1000) < result.closeTime)\r\n                    accessAllowedCount++;\r\n                allowedAccessUsers.push(CustomerName);\r\n            }\r\n            var obj = {\r\n                \"customerName\": CustomerName,\r\n                \"info\": result.info,\r\n                \"status\": result.status,\r\n                \"timestamp\": result.timestamp,\r\n                \"openTime\": result.openTime,\r\n                \"closeTime\": result.closeTime\r\n            }\r\n            allRequests.push(obj);\r\n        }\r\n        setAllPendingRequestCount(pendingRequestCount);\r\n        setAllAccessAllowedCount(accessAllowedCount);\r\n        setAllRequestData(allRequests);\r\n        setAllowedAccessUserList(Array.from(new Set(allowedAccessUsers)));\r\n        props.setLoading(false);\r\n    }\r\n\r\n    // get allowed user data\r\n    const getUserData = async (event) => {\r\n        event.preventDefault();\r\n        props.setLoading(true);\r\n        // console.log(event.target.name.value)\r\n        var formData = {\r\n            \"name\": event.target.name.value\r\n        }\r\n        console.log(formData);\r\n        if (loginData.connect == false) {\r\n            toast.error(\"Please connect metamask first\");\r\n            return;\r\n        }\r\n        try {\r\n            var tx = await loginData.KYCContract.methods.checkRequestStatus(loginData.username, formData.name).send({ from: loginData.walletAddress });\r\n            console.log(tx);\r\n            if (tx.events.RequestStatusChanged != null) {\r\n                getAllRequests();\r\n            }\r\n            var result = await loginData.KYCContract.methods.getUserData(loginData.username, formData.name).call({ from: loginData.walletAddress });\r\n            // console.log(result);\r\n            // console.log(decrypt(result[0]),decrypt(result[1]));\r\n            //byte32 hash of data\r\n            if (result) {\r\n                let res = await getUserDataByUserId(decrypt(result[0]))\r\n                setDocumentsData(res.data);\r\n                let documentAccessData = decrypt(result[1]);\r\n                // console.log(documentAccessData);\r\n                setDocumentAccessData(JSON.parse(documentAccessData));\r\n                toast.success(\"Data fetched successfully!\");\r\n            } else {\r\n                toast.error(\"Error while fetching Request\");\r\n                console.error(\"Error while fetching Request\");\r\n            }\r\n        } catch (err) {\r\n            var text = err.message.substr(err.message.indexOf('\"message\": \"') + 12);\r\n            var message = text.substr(0, text.indexOf('\"'));\r\n            toast.error(message);\r\n            console.log(err.message);\r\n        }\r\n        props.setLoading(false);\r\n    }\r\n\r\n    // set details to show document\r\n    const showDocument = async (data) => {\r\n        // let decryptedUrl = decrypt(data.fileUrlHash);\r\n        // console.log(decryptedUrl);\r\n        // setShowDocumentURL(decryptedUrl);\r\n        let url = await getDocument(data);\r\n        setShowDocumentURL(url);\r\n        // set view or downloadable\r\n        if (documentAccessData[data.documentType] == \"View\")\r\n            setIsDocumentDownloadable(false);\r\n        else\r\n            setIsDocumentDownloadable(true);\r\n\r\n\r\n    }\r\n\r\n    const getUserDocumentTypeList = async (username) => {\r\n        // console.log(username);\r\n        let res = await getUserDocTypeList(username);\r\n        // console.log(res);\r\n        if (res.success) {\r\n            setUserDocumentTypeList(res.data);\r\n            console.log(res.data);\r\n        }\r\n    }\r\n\r\n    function isEmpty(obj) {\r\n        return Object.keys(obj).length === 0;\r\n    }\r\n\r\n    //send access requets\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        props.setLoading(true);\r\n        // console.log(event.target.name.value)\r\n        \r\n        var jsonData = {};\r\n        userDocumentTypeList.forEach(function (element, index) {\r\n        var isSelected = document.getElementById(\"select\" + index).checked;\r\n        if (isSelected) {\r\n            if (document.getElementById(\"view\" + index).checked) {\r\n            let _accessType = document.getElementById(\"view\" + index).value;\r\n            jsonData[element] = _accessType;\r\n            } else if (document.getElementById(\"download\" + index).checked) {\r\n            let _accessType = document.getElementById(\"download\" + index).value;\r\n            jsonData[element] = _accessType;\r\n            }\r\n        }\r\n        });\r\n        console.log(jsonData);\r\n        if (isEmpty(jsonData)) {\r\n            toast.error(\"Please select documents first\");\r\n            props.setLoading(false);\r\n            return;\r\n        }\r\n\r\n        var formData = {\r\n            \"name\": event.target.name.value,\r\n            \"info\": event.target.info.value,\r\n            \"documentsAllowed\": JSON.stringify(jsonData),\r\n        }\r\n        console.log(formData);\r\n        if (loginData.connect == false) {\r\n            props.setLoading(false);\r\n            toast.error(\"Please connect metamask first\");\r\n            return;\r\n        }\r\n        try {\r\n            var allowance = await loginData.INRTContract.methods.allowance(loginData.walletAddress, address).call();\r\n            if (allowance < 1000000) {\r\n                var tx = await loginData.INRTContract.methods.approve(address, 1000000).send({ from: loginData.walletAddress });\r\n            }\r\n            var txId = await loginData.KYCContract.methods.sendAccessRequest(loginData.username, formData.name, formData.documentsAllowed, formData.info).send({ from: loginData.walletAddress });\r\n            console.log(txId);\r\n            if (txId) {\r\n                getAllRequests();\r\n                toast.success(\"Request send successfully!\");\r\n            } else {\r\n                toast.error(\"Error while sending Request\");\r\n                console.error(\"Error while sending Request\");\r\n            }\r\n        } catch (err) {\r\n            var text = err.message.substr(err.message.indexOf('\"message\": \"') + 12);\r\n            var message = text.substr(0, text.indexOf('\"'));\r\n            toast.error(message);\r\n            console.log(err.message);\r\n        }\r\n\r\n        props.setLoading(false);\r\n    }\r\n\r\n    return (\r\n        loginData.isConnected ? <>\r\n            <input type=\"checkbox\" id=\"side\" name=\"\" value=\"\" />\r\n            <div className=\"main-data-row  page-wrap\" >\r\n                <div className=\"side-bar-menu sidebar\">\r\n                    <div className=\"homepage-navigation\">\r\n                        <div className=\"menu-user\">\r\n                            <div className=\"user-img\"><img src={MerchantLogo} /></div>\r\n                            <p>Merchant</p>\r\n                        </div>\r\n                        <ul>\r\n                            <li><Button variant=\"secondary\" size=\"lg\" className={selectedNavigation == \"dashboard\" ? \"active\" : \"\"} onClick={() => setSelectedNavigation(\"dashboard\")}><i className=\"fa fa-tachometer\" aria-hidden=\"true\"></i> Dashboard</Button></li>\r\n                            <li><Button variant=\"secondary\" size=\"lg\" className={selectedNavigation == \"viewuserdata\" ? \"active\" : \"\"} onClick={() => setSelectedNavigation(\"viewuserdata\")}> <i className=\"fa fa-user\" aria-hidden=\"true\"></i> View User Data</Button></li>\r\n                            <li><Button variant=\"secondary\" size=\"lg\" className={selectedNavigation == \"allaccessrequest\" ? \"active\" : \"\"} onClick={() => setSelectedNavigation(\"allaccessrequest\")}><i className=\"fa fa-key\" aria-hidden=\"true\"></i> All Access Request</Button></li>\r\n                            <li><Button variant=\"secondary\" size=\"lg\" className={selectedNavigation == \"createnewaccessrequest\" ? \"active\" : \"\"} onClick={() => {setSelectedNavigation(\"createnewaccessrequest\");setUserDocumentTypeList([]);}}><i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i> Create New Access Request</Button></li>\r\n                            <li><Button variant=\"secondary\" size=\"lg\" className={selectedNavigation == \"referralReward\" ? \"active\" : \"\"} onClick={() => setSelectedNavigation(\"referralReward\")}><i className=\"fa fa-gift\" aria-hidden=\"true\"></i> Referral Rewards</Button></li>\r\n                        </ul>\r\n                    </div>\r\n                </div> {/* sidebar closed */}\r\n\r\n                <div className=\"dashboard-content page-content\">\r\n                    <label for=\"side\" className=\"toggle\">☰</label>\r\n                    <Row className=\"homepage-pageData\">\r\n                        {/* dashboard page */}\r\n                        {selectedNavigation == \"dashboard\" ?\r\n                            <>\r\n                                <div className=\"page-heading\">\r\n                                    <h2> Welcome to KYC!</h2>\r\n                                    <span> An KYC authentication using blockchain.</span>\r\n                                    <br /><br />\r\n                                </div>\r\n\r\n                                <Row className=\"dashboard-summary-details\">\r\n                                    <Col md={4}>\r\n                                        <Button variant=\"primary\" size=\"lg\" onClick={() => { setSelectedNavigation(\"allaccessrequest\"); setAllAccessRequestSelectedTab(\"approved\"); }}>\r\n                                            Access Records Allowed <Badge bg=\"secondary\">{allAccessAllowedCount}</Badge>\r\n                                            <span className=\"visually-hidden\">Access Records Allowed {allAccessAllowedCount}</span>\r\n                                        </Button>\r\n                                    </Col>\r\n                                    <Col md={4}>\r\n                                        <Button variant=\"primary\" size=\"lg\" onClick={() => { setSelectedNavigation(\"allaccessrequest\"); setAllAccessRequestSelectedTab(\"requested\"); }}>\r\n                                            Pending Requests <Badge bg=\"secondary\">{allPendingRequestCount}</Badge>\r\n                                            <span className=\"visually-hidden\">Pending Requests {allPendingRequestCount}</span>\r\n                                        </Button>\r\n                                    </Col>\r\n                                    <Col md={4}>\r\n                                        <Button variant=\"primary\" size=\"lg\" onClick={() => { setSelectedNavigation(\"referralReward\"); }}>\r\n                                            Referral Token Count <Badge bg=\"secondary\">{myReferralTokenCount}</Badge>\r\n                                            <span className=\"visually-hidden\">Referral Token Count {myReferralTokenCount}</span>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </> :\r\n                            <></>}\r\n\r\n                        {/*  viewuserdata page */}\r\n                        {selectedNavigation == \"viewuserdata\" ?\r\n                            <>\r\n                                <div className=\"page-heading\">\r\n                                    <h2> View User Data</h2>\r\n                                    {/* <span> All Allowed Access Records </span> */}\r\n                                    <br /><br />\r\n                                </div>\r\n\r\n                                {/* Form to select user */}\r\n                                <div className=\"user-form-box\">\r\n\r\n                                    <Form className=\"deal-form\" onSubmit={getUserData}>\r\n\r\n                                        <Row>\r\n                                            <Col md=\"6\">\r\n                                                <Form.Group className=\"mb-3\" controlId=\"name\">\r\n                                                    <Form.Label>Username</Form.Label><br />\r\n                                                    <Form.Text className=\"text-muted\">As per used on this platform</Form.Text>\r\n                                                </Form.Group>\r\n                                            </Col>\r\n                                            <Col md=\"6\">\r\n                                                <Form.Group className=\"mb-3\" controlId=\"name\">\r\n                                                    <Form.Select name=\"username\" id=\"name\">\r\n                                                        {allowedAccessUserList.map((data, key) => {\r\n                                                            return (\r\n                                                                <option value={data}>{data}</option>\r\n                                                            );\r\n                                                        })}\r\n                                                    </Form.Select>\r\n                                                    {/* <Form.Control type=\"text\" id=\"name\" className=\"input-design\" placeholder=\"\" required /> */}\r\n                                                </Form.Group>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <br />\r\n                                        <Row>\r\n                                            <Col className=\"submit-btn text-align-center\">\r\n                                                <Button variant=\"dark\" type=\"submit\">SUBMIT</Button>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Form>\r\n                                </div>\r\n\r\n                                <Row style={{ marginTop: \"20px\" }}>\r\n                                    {documentsData.length > 0 ?\r\n                                        <Table striped bordered hover variant=\"light\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>#</th>\r\n                                                    <th>Document Type</th>\r\n                                                    <th>Name on Document</th>\r\n                                                    <th>Document ID</th>\r\n                                                    <th>Access Type</th>\r\n                                                    <th>File Url Hash</th>\r\n                                                    <th>Actions</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {documentsData.map((data, key) => {\r\n                                                    return (\r\n                                                        <tr key={key}>\r\n                                                            <td>{key + 1}</td>\r\n                                                            <td>{data.documentType}</td>\r\n                                                            <td style={{ wordBreak: \"break-all\" }}>{data.nameOnDocument}</td>\r\n                                                            <td>{data.documentId}</td>\r\n                                                            <td>{documentAccessData[data.documentType]}</td>\r\n                                                            <td style={{ wordBreak: \"break-all\" }}>{encrypt(data.fileUrl)}</td>\r\n                                                            <td>\r\n                                                                <Button onClick={() => showDocument(data.fileUrl)}>Show</Button>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    );\r\n                                                })}\r\n                                            </tbody>\r\n                                        </Table>\r\n                                        : <></>}\r\n                                </Row>\r\n                                {showDocumentURL || showDocumentURL != \"\" ?\r\n                                    <Row>\r\n                                        {isDocumentDownloadable ?\r\n                                            <>\r\n                                                <Button variant=\"dark\" onClick={() => setShowDocumentURL(\"\")}>Close View</Button>\r\n                                                <embed src={showDocumentURL} width=\"100%\" height=\"500px\" />\r\n                                            </>\r\n                                            :\r\n                                            <PdfViewer pdf={showDocumentURL}\r\n                                                setShowDocumentURL={setShowDocumentURL} />\r\n                                        }\r\n                                    </Row>\r\n                                    : <></>\r\n                                }\r\n                            </> :\r\n                            <></>}\r\n                        {/*  allaccessrequest page */}\r\n                        {selectedNavigation == \"allaccessrequest\" ?\r\n                            <>\r\n                                <div className=\"page-heading\">\r\n                                    <h2> All Access Requests</h2>\r\n                                    {/* <span> All Access Requests.</span> */}\r\n                                </div>\r\n\r\n                                <Tabs id=\"AllAccessRequestTab\" className=\"mb-3 tabs-dashboard\"\r\n                                    activeKey={allAccessRequestSelectedTab}\r\n                                    onSelect={(k) => setAllAccessRequestSelectedTab(k)} >\r\n                                    <Tab eventKey=\"requested\" title=\"Requested\">\r\n                                        <Row>\r\n                                            <Table striped bordered hover variant=\"light\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th>#</th>\r\n                                                        <th>Merchant Name</th>\r\n                                                        <th>Info</th>\r\n                                                        <th>Status</th>\r\n                                                        <th>Request Send Timestamp</th>\r\n                                                        <th>Access Open Timestamp</th>\r\n                                                        <th>Access Close Timestamp</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {allRequestData.map((data, key) => {\r\n                                                        return (\r\n                                                            data.status == 1 ?\r\n                                                                <tr>\r\n                                                                    <td>{key + 1}</td>\r\n                                                                    <td>{data.customerName}</td>\r\n                                                                    <td>{data.info}</td>\r\n                                                                    <td>Requested</td>\r\n                                                                    <td>{new Date(parseInt(data.timestamp * 1000)).toLocaleString()}</td>\r\n                                                                    <td>{data.openTime == 0 ? \"-\" : new Date(parseInt(data.openTime * 1000)).toLocaleString()}</td>\r\n                                                                    <td>{data.closeTime == 0 ? \"-\" : new Date(parseInt(data.closeTime * 1000)).toLocaleString()}</td>\r\n                                                                </tr>\r\n                                                                : <></>\r\n                                                        );\r\n                                                    })}\r\n                                                </tbody>\r\n                                            </Table>\r\n                                        </Row>\r\n                                    </Tab>\r\n                                    <Tab eventKey=\"approved\" title=\"Approved\">\r\n                                        <Row>\r\n                                            <Table striped bordered hover variant=\"light\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th>#</th>\r\n                                                        <th>Merchant Name</th>\r\n                                                        <th>Info</th>\r\n                                                        <th>Status</th>\r\n                                                        <th>Request Send Timestamp</th>\r\n                                                        <th>Access Open Timestamp</th>\r\n                                                        <th>Access Close Timestamp</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {allRequestData.map((data, key) => {\r\n                                                        return (\r\n                                                            data.status == 2 && parseInt(new Date().getTime() / 1000) < data.closeTime ?\r\n                                                                <tr>\r\n                                                                    <td>{key + 1}</td>\r\n                                                                    <td>{data.customerName}</td>\r\n                                                                    <td>{data.info}</td>\r\n                                                                    <td>Approved</td>\r\n                                                                    <td>{new Date(parseInt(data.timestamp * 1000)).toLocaleString()}</td>\r\n                                                                    <td>{data.openTime == 0 ? \"-\" : new Date(parseInt(data.openTime * 1000)).toLocaleString()}</td>\r\n                                                                    <td>{data.closeTime == 0 ? \"-\" : new Date(parseInt(data.closeTime * 1000)).toLocaleString()}</td>\r\n                                                                </tr>\r\n                                                                : <></>\r\n                                                        );\r\n                                                    })}\r\n                                                </tbody>\r\n                                            </Table>\r\n\r\n                                        </Row>\r\n                                    </Tab>\r\n                                    <Tab eventKey=\"rejected\" title=\"Rejected\">\r\n                                        <Row>\r\n                                            <Table striped bordered hover variant=\"light\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th>#</th>\r\n                                                        <th>Merchant Name</th>\r\n                                                        <th>Info</th>\r\n                                                        <th>Status</th>\r\n                                                        <th>Request Send Timestamp</th>\r\n                                                        <th>Access Open Timestamp</th>\r\n                                                        <th>Access Close Timestamp</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {allRequestData.map((data, key) => {\r\n                                                        return (\r\n                                                            data.status == -1 ?\r\n                                                                <tr>\r\n                                                                    <td>{key + 1}</td>\r\n                                                                    <td>{data.customerName}</td>\r\n                                                                    <td>{data.info}</td>\r\n                                                                    <td>Rejected</td>\r\n                                                                    <td>{new Date(parseInt(data.closeTime * 1000)).toLocaleString()}</td>\r\n                                                                    <td>{data.openTime == 0 ? \"-\" : new Date(parseInt(data.openTime * 1000)).toLocaleString()}</td>\r\n                                                                    <td>{data.closeTime == 0 ? \"-\" : new Date(parseInt(data.timestamp * 1000)).toLocaleString()}</td>\r\n                                                                </tr>\r\n                                                                : <></>\r\n                                                        );\r\n                                                    })}\r\n                                                </tbody>\r\n                                            </Table>\r\n\r\n                                        </Row>\r\n                                    </Tab>\r\n                                    <Tab eventKey=\"closed\" title=\"Closed\">\r\n                                        <Row>\r\n                                            <Table striped bordered hover variant=\"light\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th>#</th>\r\n                                                        <th>Merchant Name</th>\r\n                                                        <th>Info</th>\r\n                                                        <th>Status</th>\r\n                                                        <th>Request Send Timestamp</th>\r\n                                                        <th>Access Open Timestamp</th>\r\n                                                        <th>Access Close Timestamp</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {allRequestData.map((data, key) => {\r\n                                                        return (\r\n                                                            data.status == 3 || parseInt(new Date().getTime() / 1000) > data.closeTime ?\r\n                                                                <tr>\r\n                                                                    <td>{key + 1}</td>\r\n                                                                    <td>{data.customerName}</td>\r\n                                                                    <td>{data.info}</td>\r\n                                                                    <td>Closed</td>\r\n                                                                    <td>{new Date(parseInt(data.timestamp * 1000)).toLocaleString()}</td>\r\n                                                                    <td>{data.openTime == 0 ? \"-\" : new Date(parseInt(data.openTime * 1000)).toLocaleString()}</td>\r\n                                                                    <td>{data.closeTime == 0 ? \"-\" : new Date(parseInt(data.closeTime * 1000)).toLocaleString()}</td>\r\n                                                                </tr>\r\n                                                                : <></>\r\n                                                        );\r\n                                                    })}\r\n                                                </tbody>\r\n                                            </Table>\r\n\r\n                                        </Row>\r\n                                    </Tab>\r\n                                    <Tab eventKey=\"all\" title=\"All\">\r\n                                        <Row>\r\n                                            <Table striped bordered hover variant=\"light\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th>#</th>\r\n                                                        <th>Merchant Name</th>\r\n                                                        <th>Info</th>\r\n                                                        <th>Status</th>\r\n                                                        <th>Request Send Timestamp</th>\r\n                                                        <th>Access Open Timestamp</th>\r\n                                                        <th>Access Close Timestamp</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {allRequestData.map((data, key) => {\r\n                                                        return (\r\n                                                            <tr>\r\n                                                                <td>{key + 1}</td>\r\n                                                                <td>{data.customerName}</td>\r\n                                                                <td>{data.info}</td>\r\n                                                                <td>{data.status == 1 ? \"Requested\" :\r\n                                                                    data.status == 2 ? \"Approved\" :\r\n                                                                        data.status == -1 ? \"Rejected\" : \"Closed\"}</td>\r\n                                                                <td>{new Date(parseInt(data.timestamp * 1000)).toLocaleString()}</td>\r\n                                                                <td>{data.openTime == 0 ? \"-\" : new Date(parseInt(data.openTime * 1000)).toLocaleString()}</td>\r\n                                                                <td>{data.closeTime == 0 ? \"-\" : new Date(parseInt(data.closeTime * 1000)).toLocaleString()}</td>\r\n                                                            </tr>\r\n                                                        );\r\n                                                    })}\r\n                                                </tbody>\r\n                                            </Table>\r\n\r\n                                        </Row>\r\n                                    </Tab>\r\n                                </Tabs>\r\n\r\n                            </> :\r\n                            <></>}\r\n                        {/*  createnewaccessrequest page */}\r\n                        {selectedNavigation == \"createnewaccessrequest\" ?\r\n                            <>\r\n                                <div className=\"page-heading\">\r\n                                    <h2> Create New Access Request</h2>\r\n                                    <span> Note: Make sure the username is correct</span>\r\n                                </div>\r\n\r\n                                {/* Format documents */}\r\n                                <div className=\"user-form-box\">\r\n\r\n                                    <Form className=\"deal-form\" onSubmit={handleSubmit}>\r\n\r\n                                        <Row>\r\n                                            <Col md=\"6\">\r\n                                                <Form.Group className=\"mb-3\" controlId=\"name\">\r\n                                                    <Form.Label>Username</Form.Label><span className=\"color-red\">*</span>\r\n                                                    <Form.Text className=\"text-muted\"> (As per used on this platform) </Form.Text>\r\n                                                    <Form.Control type=\"text\" id=\"name\" className=\"input-design\" placeholder=\"Enter username\" onChange={(e) => getUserDocumentTypeList(e.target.value)} required />\r\n                                                </Form.Group>\r\n                                            </Col>\r\n                                            <Col md=\"6\">\r\n                                                <Form.Group className=\"mb-3\" controlId=\"info\">\r\n                                                    <Form.Label>Info</Form.Label>\r\n                                                    <Form.Text className=\"text-muted\"> (max 50 characters) </Form.Text>\r\n                                                    <Form.Control type=\"text\" id=\"info\" className=\"input-design\" placeholder=\"optional info\" required maxLength=\"50\" />\r\n                                                </Form.Group>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        {userDocumentTypeList.length>0?\r\n                                        <Row>\r\n                                            <p>Select documents with proper access type<span className=\"color-red\">*</span></p>\r\n                                            <Table striped bordered hover variant=\"light\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th>#</th>\r\n                                                        <th>Document Type</th>\r\n                                                        <th>Select</th>\r\n                                                        <th>Access type</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {userDocumentTypeList.map((element, key) => {\r\n                                                        return (\r\n                                                            <tr key={key}>\r\n                                                                <td>{key + 1}</td>\r\n                                                                <td>{element}</td>\r\n                                                                <td className=\"text-align-center\">\r\n                                                                    <input type=\"checkbox\" id={\"select\" + key} name=\"selected\" value=\"select\" />\r\n                                                                </td>\r\n                                                                <td>\r\n                                                                    <label><input type=\"radio\" id={\"view\" + key} name={\"accessType\" + key} value=\"View\" defaultChecked />\r\n                                                                        View</label> &ensp;\r\n                                                                    <label><input type=\"radio\" id={\"download\" + key} name={\"accessType\" + key} value=\"Download\" />\r\n                                                                        Download</label>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        );\r\n                                                    })}\r\n                                                </tbody>\r\n                                            </Table>\r\n\r\n                                        </Row>\r\n                                        :<></>}\r\n                                        <br />\r\n                                        <Row>\r\n                                            <Col className=\"submit-btn text-align-center\">\r\n                                                <Button variant=\"dark\" type=\"submit\">SUBMIT</Button>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Form>\r\n                                </div>\r\n                            </> :\r\n                            <></>}\r\n\r\n                        {selectedNavigation == \"referralReward\" ?\r\n                            <>\r\n                                <div className=\"page-heading\">\r\n                                    <h2>ReferralReward</h2>\r\n                                    <span> Note: Make sure the username is correct</span>\r\n                                </div>\r\n                                <Col style={{ padding: \"20px\", backgroundColor: \"#e8e8e8\", borderRadius: \"10px\" }}>\r\n                                    Your Referral Token Count: {myReferralTokenCount}<br /><br />\r\n                                    {myReferralTokenCount > 0 ?\r\n                                        <Button onClick={() => claimReferralTokens()}>Claim Referral Tokens</Button>\r\n                                        : <></>}\r\n                                </Col>\r\n                            </> :\r\n                            <></>}\r\n                    </Row>\r\n                </div> {/* dashboard content closed  */}\r\n            </div>\r\n\r\n            <br /><br /><br />\r\n\r\n        </> : <Redirect to=\"/merchant/login\"></Redirect>)\r\n}\r\n\r\nexport default MerchantHomePage;","import Web3 from 'web3';\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\nimport { Button, Form, Container, Row, Col } from \"react-bootstrap\";\r\nimport { toast } from 'react-toastify'; //toster\r\nimport { address, abi } from '../../components/contracts/ContractData';\r\nimport { tokenAddress, tokenABI } from '../../components/contracts/INRTTokenContractData';\r\nimport { createCustomer, userLogin } from '../../components/api/ProjectCalls';\r\nimport { hash } from '../../components/Encryption/file';\r\n\r\n// Route to contribute page \r\nimport { useHistory } from \"react-router-dom\";\r\nimport { LoginContext } from '../LoginContext';\r\n\r\nfunction AdminLogin(props) {\r\n  const [loginData, setLoginData] = useContext(LoginContext);\r\n  const [username, setUsername] = useState('');\r\n\r\n  // jump to another page\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n\r\n    if (localStorage.getItem('rememberMe')) {\r\n      const username = localStorage.getItem('admin_username')\r\n      setUsername(username)\r\n    }\r\n    if (window.ethereum) {\r\n      window.ethereum.on('chainChanged', () => {\r\n        window.location.reload();\r\n      })\r\n      window.ethereum.on('accountsChanged', function (accounts) {\r\n        // Time to reload your interface with accounts[0]!\r\n        connect();\r\n      });\r\n      connect();\r\n    }\r\n    // fix-the-react-memory-leak-\r\n    return () => {\r\n      props.setLoading(false);\r\n    }\r\n  }, [])\r\n\r\n\r\n  async function connect() {\r\n    let web3;\r\n    let KYCContract, INRTContract;\r\n    //connect to web3\r\n    if (typeof window !== 'undefined' && typeof window.web3 !== 'undefined') {\r\n      //we are in the browser and metamask is running\r\n      //ETH test net 3,  // mainnet 1\r\n      // BSC test net 97  //mainnet 56\r\n      web3 = new Web3(window.web3.currentProvider);\r\n      let netId = await web3.eth.net.getId();\r\n      var networkName = \"\";\r\n      console.log(netId);\r\n      switch (netId) {\r\n        case 97:\r\n          networkName = 'BSC'\r\n          console.log('Network is BSC mainnet')\r\n          break\r\n        default:\r\n          toast.error('Please select mainnet first')\r\n          console.error('Please select mainnet first')\r\n          return;\r\n      }\r\n      //set details\r\n      //log network\r\n      web3.eth.net.getNetworkType().then(console.log);\r\n      let accounts;\r\n      try {\r\n        accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n      } catch (error) {\r\n        if (error.code === 4001) {\r\n          console.error(\"Please allow metamask to connect\")\r\n        }\r\n        return;\r\n        // console.log(error)\r\n      }\r\n      console.log(accounts)\r\n      if (accounts.length < 1) {\r\n        console.error('Please unlock metamask wallet first!')\r\n        return;\r\n      }\r\n      console.log(accounts[0]);\r\n\r\n      KYCContract = new web3.eth.Contract(abi, address);\r\n      INRTContract = new web3.eth.Contract(tokenABI, tokenAddress);\r\n      setLoginData({\r\n        walletAddress: accounts[0],\r\n        isConnected: true,\r\n        username: \"\",\r\n        web3: web3,\r\n        role: null,\r\n        KYCContract: KYCContract,\r\n        INRTContract: INRTContract\r\n      });\r\n\r\n    } else {\r\n      //on the browser or user is not running metamask\r\n      console.error(\"Metamask wallet not found! Please make sure wallet is installed and running!\");\r\n    }\r\n  }\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    props.setLoading(true);\r\n    const user = {\r\n      username: event.target.username.value,\r\n      password: event.target.password.value\r\n    }\r\n    localStorage.setItem('rememberMe', event.target.rememberMe.checked)\r\n    localStorage.setItem('admin_username', username)\r\n\r\n    if (loginData.KYCContract == null) {\r\n      connect();\r\n      // toast.error(\"Please connect metamask first\");\r\n      // props.setLoading(false);\r\n      // return;\r\n    } else{\r\n      var address = await loginData.KYCContract.methods.owner().call();\r\n      console.log(address.toLowerCase());\r\n      if(loginData.walletAddress!=address.toLowerCase()){\r\n        toast.error(\"Admin wallet Address is incorrect\");\r\n        props.setLoading(false);\r\n        return;\r\n      }\r\n    }\r\n    try {\r\n      let res = await userLogin(user.username, user.password);\r\n      console.log(res);\r\n      if (res.success) {\r\n        if (res.response.user[0].role == \"1\") {\r\n          setLoginData({ ...loginData, ...{ username: user.username, role: res.response.user.role, accessToken: res.response.accessToken } });\r\n          //navigate to admin page\r\n          history.push('/admin/home');\r\n        } else\r\n          toast.error(\"You are not admin\");\r\n      } else\r\n        toast.error(\"Error while login call\");\r\n    } catch (err) {\r\n      toast.error(err.message);\r\n      console.log(err.message);\r\n    }\r\n    props.setLoading(false);\r\n  }\r\n\r\n  const handleUsername = (event) => {\r\n    setUsername(event.target.value);\r\n  }\r\n\r\n  return (<>\r\n\r\n    <Container>\r\n      <div className='login-page'>\r\n        <div className=\"home-heading\">\r\n          <h2> Login</h2>\r\n        </div>\r\n\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Group className=\"mb-3 input-form\" controlId=\"formUsername\">\r\n            <Form.Label>Username</Form.Label>\r\n            <Form.Control className=\"input-design\" type=\"username\" id=\"username\" placeholder=\"Enter Username\" value={username} onChange={handleUsername} required />\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3 input-form\" controlId=\"formPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control className=\"input-design\" type=\"password\" id=\"password\" placeholder=\"Password\" required />\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formRememberMe\">\r\n            <Form.Check type=\"checkbox\" id=\"rememberMe\" label=\"Remember me \" />\r\n          </Form.Group>\r\n\r\n          <div className='btn-row'>\r\n            <Button variant=\"primary\" type=\"submit\" disabled={props.loading}>\r\n              Login\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n\r\n\r\n      </div>\r\n    </Container>\r\n  </>\r\n  )\r\n}\r\nexport default AdminLogin\r\n\r\n\r\n","import React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { Button, Modal, Row, Table, Form } from \"react-bootstrap\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n\r\nfunction DocTypeModal(props) {\r\n\r\n  useEffect(() => {\r\n    if (props.editDocumentType!=null && props.editDocumentType[2]) {\r\n      document.getElementById(\"text\").value = props.editDocumentType[0].text;\r\n      document.getElementById(\"value\").value = props.editDocumentType[0].value;\r\n    }\r\n  }, [props.editDocumentType]);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const value = event.target.value.value;\r\n    const text = event.target.text.value;\r\n    let _data = [...props.allDocumentTypeList];\r\n    let json = { \"text\": text, \"value\": value };\r\n    if (props.editDocumentType[2])\r\n      _data[props.editDocumentType[1]] = json;\r\n    else\r\n      _data.push(json);\r\n    props.setAllDocumentTypeList(_data);\r\n    await props.updateWebsiteDataCall(_data);\r\n    props.onhide();\r\n  }\r\n\r\n  return (\r\n    <Modal show={props.modalshow} onHide={props.onhide} className=\"popup-lg\">\r\n      <Modal.Body style={{ padding: '0px' }}>\r\n        <div className=\"popup-box\">\r\n          <div className=\"closed\">\r\n            <a style={{ border: 'none' }} onClick={props.onhide}><span style={{ fontSize: '25px' }}>×</span></a>\r\n          </div>\r\n\r\n          <div className=\"popup-data\">\r\n            <div className=\"popup-header\">\r\n              <h3>{props.editDocumentType!=null?(props.editDocumentType[2]?\"Edit Data\":\"Add Data\"):\"\"}</h3>\r\n            </div>\r\n            <div className=\"popup-body\">\r\n              <Row>\r\n                <Form onSubmit={handleSubmit}>\r\n                  <Form.Group className=\"mb-3\" controlId=\"value\">\r\n                    <Form.Label for=\"value\">Value of document Type.(Camelcase string without spaces.)</Form.Label>\r\n                    <Form.Control className=\"input-design\" type=\"text\" id=\"value\" placeholder=\"value\" required />\r\n                  </Form.Group>\r\n                  <Form.Group className=\"mb-3\" controlId=\"text\">\r\n                    <Form.Label for=\"text\">Text of document Type.(User will see this text in dropdown)</Form.Label>\r\n                    <Form.Control className=\"input-design\" type=\"text\" id=\"text\" placeholder=\"Text\" required />\r\n                  </Form.Group>\r\n                  <Row>\r\n                    <Button variant=\"primary\" type=\"submit\" disabled={props.loading}>\r\n                      Confirm\r\n                    </Button>\r\n                  </Row>\r\n                </Form>\r\n              </Row>\r\n            </div>\r\n            {/* <div className=\"footer-popup\">\r\n              <p>Note: Password should be correct or else your data will not be saved.</p>\r\n            </div> */}\r\n          </div>\r\n\r\n        </div>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default DocTypeModal;","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Row, Col, Container, Button, Badge, Table, Tabs, Tab, Form, Spinner } from 'react-bootstrap';\r\nimport { toast } from \"react-toastify\";\r\nimport CustomerLogo from '../../components/images/user.png';\r\nimport DocTypeModal from \"../../components/page-components/doctypeModel\";\r\nimport { useLocation, Redirect, useHistory } from \"react-router-dom\";\r\nimport { LoginContext } from \"../LoginContext\";\r\nimport { encrypt, decrypt } from '../../components/Encryption/file';\r\nimport { getWebsiteData, updateWebsiteData, getUserCount } from '../../components/api/ProjectCalls';\r\n\r\n\r\nconst AdminHome = (props) => {\r\n\r\n    const history = useHistory();\r\n    const [loginData, setLoginData] = useContext(LoginContext);\r\n\r\n    const [selectedNavigation, setSelectedNavigation] = useState(\"dashboard\");\r\n    const [totalCustomers, setTotalCustomers] = useState(0);\r\n    const [totalMerchant, setTotalMerchant] = useState(0);\r\n    // All Website Variables \r\n    const [allDocumentTypeList, setAllDocumentTypeList] = useState([]);\r\n    const [editDocumentType, setEditDocumentType] = useState(null);\r\n    const [noOfDocumentAllowed, setNoOfDocumentAllowed] = useState(0);\r\n    const [requestFees, setRequestFees] = useState(0);\r\n    const [referralRewardValue, setReferralRewardValue] = useState(0);\r\n    const [BDLTTokenAddress, setBDLTTokenAddress] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        getBDLTToken();\r\n        getRequestFees();\r\n        getReferralRewardValue();\r\n        getWebsiteVariables();\r\n        getUserCountData();\r\n    }, []);\r\n\r\n    const deleteDocTypeStr = (key) => {\r\n        let _allDocumentTypeList = [...allDocumentTypeList];\r\n        _allDocumentTypeList.splice(key, 1);\r\n        setAllDocumentTypeList(_allDocumentTypeList);\r\n        updateWebsiteDataCall();\r\n    }\r\n\r\n    const approveRequestByOwner = async (_fromMerchant, _toUsername, status) => {\r\n        props.setLoading(true);\r\n        try {\r\n            var txId = await loginData.KYCContract.methods.approveRequestByOwner(_fromMerchant, _toUsername, status).send({ from: loginData.walletAddress });\r\n            console.log(txId);\r\n            if (txId) {\r\n                toast.success(\"Request approved successfully!\");\r\n            } else {\r\n                toast.error(\"Error while approving Request\");\r\n                console.error(\"Error while approving Request\");\r\n            }\r\n        } catch (err) {\r\n            var text = err.message.substr(err.message.indexOf('\"message\": \"') + 12);\r\n            var message = text.substr(0, text.indexOf('\"'));\r\n            toast.error(message);\r\n            console.log(err.message);\r\n            // console.log(err);\r\n        }\r\n        props.setLoading(false);\r\n    }\r\n\r\n    const getAccessAllowedByAdmin = async (_fromMerchant, _toUsername) => {\r\n        // props.setLoading(true);\r\n        var status = await loginData.KYCContract.methods.getAccessAllowedByAdmin(_fromMerchant, _toUsername).call({ from: loginData.walletAddress });\r\n        console.log(status);\r\n        return status;\r\n        // props.setLoading(false);\r\n    }\r\n\r\n    const getUserCountData = async () => {\r\n        let resCustomer = await getUserCount(2);\r\n        // console.log(resCustomer);\r\n        setTotalCustomers(resCustomer.data);\r\n        let resMerchant = await getUserCount(3);\r\n        // console.log(resMerchant);\r\n        setTotalMerchant(resCustomer.data);\r\n    }\r\n\r\n    const getWebsiteVariables = async () => {\r\n        let res = await getWebsiteData();\r\n        console.log(res);\r\n        setAllDocumentTypeList(res.data[0].documentTypeList);\r\n        setNoOfDocumentAllowed(res.data[0].noOfDocumentAllowed);\r\n    }\r\n\r\n    const updateWebsiteDataCall = async (_allDocumentTypeList) => {\r\n        let res = await updateWebsiteData(noOfDocumentAllowed, _allDocumentTypeList, loginData.accessToken);\r\n        console.log(res);\r\n    }\r\n\r\n    const setNewBDLTToken = async () => {\r\n        props.setLoading(true);\r\n        try {\r\n            var txId = await loginData.KYCContract.methods.setBDLTToken(BDLTTokenAddress).send({ from: loginData.walletAddress });\r\n            console.log(txId);\r\n            if (txId) {\r\n                toast.success(\"Request approved successfully!\");\r\n            } else {\r\n                toast.error(\"Error while approving Request\");\r\n                console.error(\"Error while approving Request\");\r\n            }\r\n        } catch (err) {\r\n            var text = err.message.substr(err.message.indexOf('\"message\": \"') + 12);\r\n            var message = text.substr(0, text.indexOf('\"'));\r\n            toast.error(message);\r\n            console.log(err.message);\r\n            // console.log(err);\r\n        }\r\n        props.setLoading(false);\r\n    }\r\n\r\n    const getBDLTToken = async () => {\r\n        props.setLoading(true);\r\n        var address = await loginData.KYCContract.methods.getBDLTToken().call({ from: loginData.walletAddress });\r\n        console.log(address);\r\n        setBDLTTokenAddress(address);\r\n        props.setLoading(false);\r\n    }\r\n\r\n    const setNewRequestFees = async () => {\r\n        props.setLoading(true);\r\n        try {\r\n            var txId = await loginData.KYCContract.methods.setRequestFees(requestFees).send({ from: loginData.walletAddress });\r\n            console.log(txId);\r\n            if (txId) {\r\n                toast.success(\"Request approved successfully!\");\r\n            } else {\r\n                toast.error(\"Error while approving Request\");\r\n                console.error(\"Error while approving Request\");\r\n            }\r\n        } catch (err) {\r\n            var text = err.message.substr(err.message.indexOf('\"message\": \"') + 12);\r\n            var message = text.substr(0, text.indexOf('\"'));\r\n            toast.error(message);\r\n            console.log(err.message);\r\n            // console.log(err);\r\n        }\r\n        props.setLoading(false);\r\n    }\r\n\r\n    const getRequestFees = async () => {\r\n        props.setLoading(true);\r\n        var fees = await loginData.KYCContract.methods.getRequestFees().call({ from: loginData.walletAddress });\r\n        console.log(fees);\r\n        setRequestFees(fees);\r\n        props.setLoading(false);\r\n    }\r\n\r\n    const setNewReferralRewardValue = async () => {\r\n        props.setLoading(true);\r\n        try {\r\n            var txId = await loginData.KYCContract.methods.setReferralRewardValue(referralRewardValue).send({ from: loginData.walletAddress });\r\n            console.log(txId);\r\n            if (txId) {\r\n                toast.success(\"Request approved successfully!\");\r\n            } else {\r\n                toast.error(\"Error while approving Request\");\r\n                console.error(\"Error while approving Request\");\r\n            }\r\n        } catch (err) {\r\n            var text = err.message.substr(err.message.indexOf('\"message\": \"') + 12);\r\n            var message = text.substr(0, text.indexOf('\"'));\r\n            toast.error(message);\r\n            console.log(err.message);\r\n            // console.log(err);\r\n        }\r\n        props.setLoading(false);\r\n    }\r\n\r\n    const getReferralRewardValue = async () => {\r\n        props.setLoading(true);\r\n        var value = await loginData.KYCContract.methods.getReferralRewardValue().call({ from: loginData.walletAddress });\r\n        console.log(value);\r\n        setReferralRewardValue(value);\r\n        props.setLoading(false);\r\n    }\r\n\r\n    return (\r\n        loginData.isConnected ? <>\r\n            <input type=\"checkbox\" id=\"side\" name=\"\" value=\"\" />\r\n            <div className=\"main-data-row page-wrap\">\r\n                <>\r\n                    <DocTypeModal\r\n                        modalshow={editDocumentType != null}\r\n                        onhide={() => setEditDocumentType(null)}\r\n                        editDocumentType={editDocumentType}\r\n                        allDocumentTypeList={allDocumentTypeList}\r\n                        setAllDocumentTypeList={setAllDocumentTypeList}\r\n                        updateWebsiteDataCall={updateWebsiteDataCall}\r\n                    />\r\n                </>\r\n\r\n                <div className=\"side-bar-menu sidebar\">\r\n                    <div className=\"homepage-navigation \">\r\n                        <div className=\"menu-user\">\r\n                            <div className=\"user-img\"><img src={CustomerLogo} /></div>\r\n                            <p>Admin</p>\r\n                        </div>\r\n                        <ul>\r\n                            <li><Button variant=\"secondary\" size=\"lg\" className={selectedNavigation == \"dashboard\" ? \"active\" : \"\"} onClick={() => setSelectedNavigation(\"dashboard\")}><i className=\"fa fa-tachometer\" aria-hidden=\"true\"></i> Dashboard</Button></li>\r\n                            <li><Button variant=\"secondary\" size=\"lg\" className={selectedNavigation == \"websitevariables\" ? \"active\" : \"\"} onClick={() => setSelectedNavigation(\"websitevariables\")}><i className=\"fa fa-level-up\" aria-hidden=\"true\"></i> Update Website Variables</Button></li>\r\n                            <li><Button variant=\"secondary\" size=\"lg\" className={selectedNavigation == \"documenttypelist\" ? \"active\" : \"\"} onClick={() => setSelectedNavigation(\"documenttypelist\")}><i className=\"fa fa-list\" aria-hidden=\"true\"></i> Update Document Type List</Button></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"dashboard-content page-content\">\r\n                    <label for=\"side\" class=\"toggle\">☰</label>\r\n                    <Row className=\"homepage-pageData\">\r\n                        {/* dashboard page */}\r\n                        {selectedNavigation == \"dashboard\" ?\r\n                            <>\r\n                                <div className=\"page-heading\">\r\n                                    <h2> Admin Panel</h2>\r\n                                    <br /><br />\r\n                                </div>\r\n                                <Row>\r\n                                    <Row className=\"dashboard-summary-details\">\r\n                                        <Col md={4}>\r\n                                            <Button variant=\"primary\" size=\"lg\">\r\n                                                Total Customers <Badge bg=\"secondary\">{totalCustomers}</Badge>\r\n                                                <span className=\"visually-hidden\">Total Customers {totalCustomers}</span>\r\n                                            </Button>\r\n                                        </Col>\r\n                                        <Col md={4}>\r\n                                            <Button variant=\"primary\" size=\"lg\">\r\n                                                Total Merchants <Badge bg=\"secondary\">{totalMerchant}</Badge>\r\n                                                <span className=\"visually-hidden\">Total Merchants {totalMerchant}</span>\r\n                                            </Button>\r\n                                        </Col>\r\n                                        <Col md={4}>\r\n                                            <Button variant=\"primary\" size=\"lg\">\r\n                                                Total Documents Uploaded <Badge bg=\"secondary\">{0}</Badge>\r\n                                                <span className=\"visually-hidden\">Total Documents Uploaded {0}</span>\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Row>\r\n                            </> :\r\n                            <></>}\r\n\r\n                        {/*  websitevariables page */}\r\n                        {selectedNavigation == \"websitevariables\" ?\r\n                            <>\r\n                                <div className=\"page-heading\">\r\n                                    <h2> Update Website Variables</h2>\r\n                                </div>\r\n                                <Form>\r\n                                    <Row>\r\n                                        <Col xs=\"2\">\r\n                                            <Form.Label controlId=\"nameOnDocument\">No Of Document Allowed</Form.Label>\r\n                                        </Col>\r\n                                        <Col xs=\"6\">\r\n                                            <Form.Control type=\"text\" id=\"nameOnDocument\" className=\"input-design\" placeholder=\"\" value={noOfDocumentAllowed} onChange={e => setNoOfDocumentAllowed(e.target.value)} required />\r\n                                        </Col>\r\n                                        <Col xs=\"auto\">\r\n                                            <Button onClick={() => updateWebsiteDataCall(allDocumentTypeList)}>Update</Button>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                    <Row>\r\n                                        <Col xs=\"2\">\r\n                                            <Form.Label controlId=\"nameOnDocument\">BDLT Token Address</Form.Label>\r\n                                        </Col>\r\n                                        <Col xs=\"6\">\r\n                                            <Form.Control type=\"text\" id=\"nameOnDocument\" className=\"input-design\" placeholder=\"\" value={BDLTTokenAddress} onChange={e => setBDLTTokenAddress(e.target.value)} required />\r\n                                        </Col>\r\n                                        <Col xs=\"auto\">\r\n                                            <Button onClick={() => setNewBDLTToken()}>Update</Button>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                    <Row>\r\n                                        <Col xs=\"2\">\r\n                                            <Form.Label controlId=\"nameOnDocument\">Referral Reward Value</Form.Label>\r\n                                        </Col>\r\n                                        <Col xs=\"6\">\r\n                                            <Form.Control type=\"text\" id=\"nameOnDocument\" className=\"input-design\" placeholder=\"\" value={referralRewardValue} onChange={e => setReferralRewardValue(e.target.value)} required />\r\n                                        </Col>\r\n                                        <Col xs=\"auto\">\r\n                                            <Button onClick={() => setNewReferralRewardValue()}>Update</Button>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                    <Row>\r\n                                        <Col xs=\"2\">\r\n                                            <Form.Label controlId=\"nameOnDocument\">Request Fees</Form.Label>\r\n                                        </Col>\r\n                                        <Col xs=\"6\">\r\n                                            <Form.Control type=\"text\" id=\"nameOnDocument\" className=\"input-design\" placeholder=\"\" value={requestFees} onChange={e => setRequestFees(e.target.value)} required />\r\n                                        </Col>\r\n                                        <Col xs=\"auto\">\r\n                                            <Button onClick={() => setNewRequestFees()}>Update</Button>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                </Form>\r\n                            </> :\r\n                            <></>}\r\n                        {/*  documenttypelist page */}\r\n                        {selectedNavigation == \"documenttypelist\" ?\r\n                            <>\r\n                                <div className=\"page-heading\">\r\n                                    <h2> Update Document Type List</h2>\r\n                                    <span> List of all document type for user to select document from.</span>\r\n                                    <br /><br />\r\n                                </div>\r\n                                <Row>\r\n                                    Total Document Types : {allDocumentTypeList.length} <br />\r\n                                    <Button onClick={() => setEditDocumentType([null, -1, false])}><i class=\"fa fa-plus-square-o\" aria-hidden=\"true\"></i></Button>\r\n\r\n                                    <Table striped bordered hover variant=\"light\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>#</th>\r\n                                                <th>Document Type<br />(non-spacing text)</th>\r\n                                                <th>Document Type Text<br />(User view)</th>\r\n                                                <th>Action</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {/* <tr>\r\n                                                    <td>{1}</td>\r\n                                                    <td>{\"adhar\"} </td>\r\n                                                    <td>\r\n                                                        <Button onClick={() => console.log(0)}>Show</Button>\r\n                                                    </td>\r\n                                                </tr> */}\r\n\r\n                                            {allDocumentTypeList.map((data, key) => {\r\n                                                return (\r\n                                                    <tr key={key}>\r\n                                                        <td>{key + 1}</td>\r\n                                                        <td>{data.value}</td>\r\n                                                        <td>{data.text}</td>\r\n                                                        <td>\r\n                                                            <Button onClick={() => setEditDocumentType([data, key, true])}><i className=\"fa fa-pencil\" aria-hidden=\"true\"></i></Button>\r\n                                                            <Button onClick={() => deleteDocTypeStr(key)}><i className=\"fa fa-trash\" aria-hidden=\"true\"></i></Button>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                );\r\n                                            })}\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </Row>\r\n                            </> :\r\n                            <></>}\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        </> : <Redirect to=\"/\"></Redirect>)\r\n}\r\n\r\nexport default AdminHome","import { useEffect, useContext, useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Spinner } from 'react-bootstrap';\nimport './App.css';\nimport { ToastContainer } from 'react-toastify'; //toster\nimport 'react-toastify/dist/ReactToastify.css';\nimport { LoginContext } from \"./pages/LoginContext\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Menubar from './components/page-components/navgiationBar';\nimport Footer from './components/page-components/footer';\n\nimport Home from './pages/home';\nimport CustomerLogin from './pages/customer/login';\nimport CustomerHome from './pages/customer/home';\nimport MerchantLogin from './pages/merchant/merchantlogin';\nimport MerchantHomePage from './pages/merchant/merchanthomepage';\nimport AdminLogin from './pages/admin/login';\nimport AdminHomePage from './pages/admin/home';\n\nfunction App() {\n\n  const [loading, setLoading] = useState(false);\n  const [loginData, setLoginData] = useContext(LoginContext);\n  const [tokenCount, setTokenCount] = useState(0);\n\n\n  const updateBalance = async () => {\n    if (loginData.INRTContract) {\n      var result = await loginData.INRTContract.methods.balanceOf(loginData.walletAddress).call();\n      console.log(result);\n      if (tokenCount != result)\n        setTokenCount(result / 10 ** 6);\n    }\n  }\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <ToastContainer autoClose={4000} limit={3}></ToastContainer>\n        <header className=\"App-header\">\n          <Menubar tokenCount={tokenCount} setTokenCount={setTokenCount} updateBalance={updateBalance}/>\n        </header>\n        <div className={loading ? \"pageData loading-div\" : \"pageData\"}>\n          <div className={loading ? 'loading-bar-center' : 'hide'}>\n            <Spinner animation=\"border\" role=\"status\">\n              <span className=\"visually-hidden\">Loading...</span>\n            </Spinner>\n          </div>\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route exact path=\"/login\">\n              <CustomerLogin loading={loading} setLoading={setLoading} />\n            </Route>\n            <Route exact path=\"/home\">\n              <CustomerHome loading={loading} setLoading={setLoading} updateBalance={updateBalance}/>\n            </Route>\n            <Route exact path=\"/merchant/login\">\n              <MerchantLogin loading={loading} setLoading={setLoading} />\n            </Route>\n            <Route exact path=\"/merchant/home\">\n              <MerchantHomePage loading={loading} setLoading={setLoading} tokenCount={tokenCount} setTokenCount={setTokenCount} updateBalance={updateBalance} />\n            </Route>\n            <Route exact path=\"/admin/login\">\n              <AdminLogin loading={loading} setLoading={setLoading} />\n            </Route>\n            <Route exact path=\"/admin/home\">\n              <AdminHomePage loading={loading} setLoading={setLoading} tokenCount={tokenCount} setTokenCount={setTokenCount} />\n            </Route>\n            <Route path=\"*\">\n              <div>Page not found</div>\n            </Route>\n          </Switch>\n        </div>\n        <div className=\"footer\">\n          <Footer />\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { LoginProvider } from './pages/LoginContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <LoginProvider>\n      <App />\n    </LoginProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}